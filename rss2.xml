<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JH&#39;s dev blog</title>
    <link>https://juhyeong-k.github.io/</link>
    
    <atom:link href="https://juhyeong-k.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>All about dev</description>
    <pubDate>Mon, 22 Feb 2021 11:06:47 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>20210222 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/22/20210222-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/22/20210222-TIL/</guid>
      <pubDate>Mon, 22 Feb 2021 11:01:54 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;HTML 웹 접근성과 웹 표준 및 HTML5 강의 내용 복습&lt;/li&gt;
&lt;li&gt;CSS 역</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>HTML 웹 접근성과 웹 표준 및 HTML5 강의 내용 복습</li><li>CSS 역할 및 원리 강의 내용 복습</li><li>“Clean Code” ~10p 독서</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>CSS 강의 복습</li><li>“Clean Code” 독서</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/22/20210222-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210221 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/21/20210221-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/21/20210221-TIL/</guid>
      <pubDate>Sun, 21 Feb 2021 13:24:26 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;git flow 연습&lt;/li&gt;
&lt;li&gt;“clean code” 책 읽기&lt;/li&gt;
&lt;/ul</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>git flow 연습</li><li>“clean code” 책 읽기</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>강의 복습</li><li>하노이타워 구현</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/21/20210221-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210220 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/20/20210220-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/20/20210220-TIL/</guid>
      <pubDate>Sat, 20 Feb 2021 14:04:19 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Elevator-class-practice&quot;&gt;&lt;a href=&quot;#Elevator-class-practice&quot; class=&quot;headerlink&quot; title=&quot;Elevator class practice&quot;&gt;&lt;/a&gt;Elevator class pr</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Elevator-class-practice"><a href="#Elevator-class-practice" class="headerlink" title="Elevator class practice"></a>Elevator class practice</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> abc <span class="keyword">import</span> ABC, abstractmethod</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Elevators</span>(<span class="params">ABC</span>):</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @abstractmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_min_max</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @abstractmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_up</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @abstractmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_down</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @abstractmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_to_passenger1</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @abstractmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_to_passenger2</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Elevator</span>(<span class="params">Elevators</span>):</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,current_floor=<span class="number">1</span></span>):</span></span><br><span class="line">        self.passengers = passengers</span><br><span class="line">        <span class="comment"># 엘리베이터를 이용하는 승객</span></span><br><span class="line">        self.current_floor = current_floor</span><br><span class="line">        <span class="comment"># 엘리베이터 현재 층</span></span><br><span class="line">        self.move_counts = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 엘리베이터 누적 층 수</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_min_max</span>(<span class="params">self, passengers</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        올라가고 내려가는 승객들 중 최소 층과 최대 층을 구한다</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        in_f = []</span><br><span class="line">        out_f = []</span><br><span class="line">        <span class="keyword">for</span> a, b <span class="keyword">in</span> passengers:</span><br><span class="line">            in_f.append(a)</span><br><span class="line">            out_f.append(b)</span><br><span class="line">        <span class="keyword">if</span> a &gt; b:</span><br><span class="line">            self.in_floor = <span class="built_in">max</span>(in_f)</span><br><span class="line">            self.out_floor = <span class="built_in">min</span>(out_f)</span><br><span class="line">            print(<span class="string">f&quot;start: <span class="subst">&#123;self.in_floor&#125;</span> end: <span class="subst">&#123;self.out_floor&#125;</span>&quot;</span>)  </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.in_floor = <span class="built_in">min</span>(in_f)</span><br><span class="line">            self.out_floor = <span class="built_in">max</span>(out_f)</span><br><span class="line">            print(<span class="string">f&quot;start: <span class="subst">&#123;self.in_floor&#125;</span> end: <span class="subst">&#123;self.out_floor&#125;</span>&quot;</span>)  </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_up</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        엘리베이터가 올라가면서 이동한 층들을 move_counts에 누적</span></span><br><span class="line"><span class="string">        승객이 내린 층을 현재 엘리베이터의 층으로 변경</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.move_counts += self.out_floor - self.in_floor</span><br><span class="line">        self.current_floor = self.out_floor</span><br><span class="line">        print(<span class="string">f&quot;move_counts: <span class="subst">&#123;self.move_counts&#125;</span>, current_floor: <span class="subst">&#123;self.current_floor&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_down</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        엘리베이터가 내려가면서 이동한 층들을 move_counts에 누적</span></span><br><span class="line"><span class="string">        승객이 내린 층을 현재 엘리베이터의 층으로 변경</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.move_counts += self.in_floor - self.out_floor</span><br><span class="line">        self.current_floor = self.out_floor</span><br><span class="line">        print(<span class="string">f&quot;move_counts: <span class="subst">&#123;self.move_counts&#125;</span>, current_floor: <span class="subst">&#123;self.current_floor&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_to_passenger1</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        올라가는 엘리베이터가 승객의 층까지 이동한 층들을 move_counts에 누적</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.move_counts += <span class="built_in">abs</span>(self.current_floor - self.in_floor)       </span><br><span class="line">        print(<span class="string">f&quot;move to passenger: current:<span class="subst">&#123;self.current_floor&#125;</span>-&gt;passenger:<span class="subst">&#123;self.in_floor&#125;</span>&quot;</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">move_to_passenger2</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        내려가는 엘리베이터가 승객의 층까지 이동한 층들을 move_counts에 누적</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self.move_counts += <span class="built_in">abs</span>(self.current_floor - self.in_floor)        </span><br><span class="line">        print(<span class="string">f&quot;move to passenger: currnet:<span class="subst">&#123;self.current_floor&#125;</span>-&gt;passenger:<span class="subst">&#123;self.in_floor&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 엘리베이터 구현</span></span><br><span class="line">passengers = [(<span class="number">6</span>, <span class="number">12</span>), (<span class="number">4</span>, <span class="number">13</span>), (<span class="number">11</span>, <span class="number">3</span>), (<span class="number">9</span>, <span class="number">2</span>), (<span class="number">11</span>, <span class="number">12</span>), (<span class="number">3</span>, <span class="number">9</span>), (<span class="number">14</span>, <span class="number">8</span>), (<span class="number">1</span>, <span class="number">7</span>), (<span class="number">11</span>, <span class="number">9</span>), (<span class="number">14</span>, <span class="number">16</span>), (<span class="number">2</span>, <span class="number">15</span>), (<span class="number">2</span>, <span class="number">9</span>), (<span class="number">8</span>, <span class="number">16</span>), (<span class="number">8</span>, <span class="number">9</span>), (<span class="number">3</span>, <span class="number">10</span>), (<span class="number">5</span>, <span class="number">4</span>), (<span class="number">13</span>, <span class="number">9</span>), (<span class="number">4</span>, <span class="number">6</span>), (<span class="number">13</span>, <span class="number">7</span>), (<span class="number">4</span>, <span class="number">8</span>), (<span class="number">5</span>, <span class="number">3</span>), (<span class="number">12</span>, <span class="number">14</span>), (<span class="number">10</span>, <span class="number">13</span>), (<span class="number">6</span>, <span class="number">12</span>), (<span class="number">1</span>, <span class="number">7</span>), (<span class="number">9</span>, <span class="number">2</span>), (<span class="number">13</span>, <span class="number">11</span>), (<span class="number">1</span>, <span class="number">14</span>), (<span class="number">11</span>, <span class="number">8</span>), (<span class="number">15</span>, <span class="number">12</span>), (<span class="number">3</span>, <span class="number">15</span>), (<span class="number">10</span>, <span class="number">3</span>), (<span class="number">4</span>, <span class="number">1</span>), (<span class="number">7</span>, <span class="number">1</span>), (<span class="number">15</span>, <span class="number">8</span>), (<span class="number">10</span>, <span class="number">16</span>), (<span class="number">9</span>, <span class="number">3</span>), (<span class="number">14</span>, <span class="number">13</span>), (<span class="number">8</span>, <span class="number">13</span>), (<span class="number">16</span>, <span class="number">9</span>), (<span class="number">10</span>, <span class="number">7</span>), (<span class="number">1</span>, <span class="number">6</span>), (<span class="number">16</span>, <span class="number">13</span>), (<span class="number">5</span>, <span class="number">3</span>), (<span class="number">1</span>, <span class="number">12</span>), (<span class="number">1</span>, <span class="number">7</span>), (<span class="number">12</span>, <span class="number">3</span>), (<span class="number">13</span>, <span class="number">6</span>), (<span class="number">12</span>, <span class="number">15</span>), (<span class="number">15</span>, <span class="number">6</span>)]</span><br><span class="line"></span><br><span class="line">e1 = Elevator()</span><br><span class="line">e2 = Elevator()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">len</span>(passengers) &gt; <span class="number">0</span>:</span><br><span class="line">    up_passengers = [person <span class="keyword">for</span> person <span class="keyword">in</span> passengers[:<span class="number">10</span>] <span class="keyword">if</span> person[<span class="number">0</span>] &lt; person[<span class="number">1</span>]]</span><br><span class="line">    down_passengers = [person <span class="keyword">for</span> person <span class="keyword">in</span> passengers[:<span class="number">10</span>] <span class="keyword">if</span> person[<span class="number">0</span>] &gt; person[<span class="number">1</span>]]</span><br><span class="line">    print(up_passengers)</span><br><span class="line">    print(down_passengers)</span><br><span class="line">    e1.get_min_max(up_passengers)</span><br><span class="line">    e2.get_min_max(down_passengers)</span><br><span class="line">    e1.move_to_passenger1()</span><br><span class="line">    e2.move_to_passenger2()</span><br><span class="line">    e1.move_up()</span><br><span class="line">    e2.move_down()</span><br><span class="line">    print(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    passengers = passengers[<span class="number">10</span>:]</span><br><span class="line">print(<span class="string">f&quot;elevator&#x27;s total move: <span class="subst">&#123;e1.move_counts + e2.move_counts&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/20/20210220-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210219 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/19/20210219-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/19/20210219-TIL/</guid>
      <pubDate>Fri, 19 Feb 2021 12:03:44 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;엘리베이터 시스템 클래스 구현 연습&lt;/li&gt;
&lt;li&gt;파이썬 강의 복습&lt;/li&gt;
&lt;li&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>엘리베이터 시스템 클래스 구현 연습</li><li>파이썬 강의 복습</li><li>[HackerRank] Day 14 문제 풀이</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>파이썬 과제 제출</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/19/20210219-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210218 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/18/20210218-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/18/20210218-TIL/</guid>
      <pubDate>Thu, 18 Feb 2021 12:39:16 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;터미널 개발 환경 설정&lt;/li&gt;
&lt;li&gt;requests, beautifulsoup 활용</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>터미널 개발 환경 설정</li><li>requests, beautifulsoup 활용하는 과제 풀이</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>파이썬 강의 복습</li><li>[HackerRank] Day 14 문제 풀이</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/18/20210218-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210217 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/17/20210217-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/17/20210217-TIL/</guid>
      <pubDate>Wed, 17 Feb 2021 10:44:01 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://juhyeong-k.github.io/2021/02/16</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li><a href="https://juhyeong-k.github.io/2021/02/16/decorator-practice/">decorator practice</a> 내용 추가</li><li><a href="https://juhyeong-k.github.io/2021/02/15/pyenv-virtualenv-poetry-autoenv-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95-%EC%A0%95%EB%A6%AC/">pyenv virtualenv poetry autoenv</a> 내용 추가</li><li>[HackerRank]Day 11 풀이</li><li>파이썬 강의 내용 복습</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>requests, beautifulsoup 활용하는 과제 풀이</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/17/20210217-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[HackerRank]Day 11: 2D Arrays</title>
      <link>https://juhyeong-k.github.io/2021/02/17/HackerRank-Day-11-2D-Arrays/</link>
      <guid>https://juhyeong-k.github.io/2021/02/17/HackerRank-Day-11-2D-Arrays/</guid>
      <pubDate>Wed, 17 Feb 2021 10:40:42 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Day-11-2D-Arrays&quot;&gt;&lt;a href=&quot;#Day-11-2D-Arrays&quot; class=&quot;headerlink&quot; title=&quot;Day 11: 2D Arrays&quot;&gt;&lt;/a&gt;Day 11: 2D Arrays&lt;/h1&gt;&lt;figure class=&quot;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Day-11-2D-Arrays"><a href="#Day-11-2D-Arrays" class="headerlink" title="Day 11: 2D Arrays"></a>Day 11: 2D Arrays</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">arr = []</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    arr.append(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().rstrip().split())))</span><br><span class="line"></span><br><span class="line">total_sum_list = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">4</span>):</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">4</span>):</span><br><span class="line">        total_sum = <span class="built_in">sum</span>(arr[<span class="number">0</span>+i][k:k+<span class="number">3</span>]) + (arr[<span class="number">1</span>+i][k+<span class="number">1</span>]) + <span class="built_in">sum</span>(arr[<span class="number">2</span>+i][k:k+<span class="number">3</span>])</span><br><span class="line">        total_sum_list.append(total_sum)</span><br><span class="line">print(<span class="built_in">max</span>(total_sum_list))</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/HackerRank/">HackerRank</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/HackerRank/">HackerRank</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/17/HackerRank-Day-11-2D-Arrays/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210216 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/16/20210216-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/16/20210216-TIL/</guid>
      <pubDate>Tue, 16 Feb 2021 12:15:19 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;[HackerRank] Day 10 풀이&lt;/li&gt;
&lt;li&gt;pyenv, virtualen</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>[HackerRank] Day 10 풀이</li><li>pyenv, virtualenv, poetry, autoenv 설치 글 작성</li><li>Decorator practice 문제 풀이</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li> 파이썬 강의 내용 복습</li><li>[HackerRank] Day 11 풀이</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/16/20210216-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>decorator practice</title>
      <link>https://juhyeong-k.github.io/2021/02/16/decorator-practice/</link>
      <guid>https://juhyeong-k.github.io/2021/02/16/decorator-practice/</guid>
      <pubDate>Tue, 16 Feb 2021 12:03:40 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Decorator-practice&quot;&gt;&lt;a href=&quot;#Decorator-practice&quot; class=&quot;headerlink&quot; title=&quot;Decorator practice&quot;&gt;&lt;/a&gt;Decorator practice&lt;/h1&gt;&lt;blockquo</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Decorator-practice"><a href="#Decorator-practice" class="headerlink" title="Decorator practice"></a>Decorator practice</h1><blockquote><blockquote><p>“Hi, {name}. You might be loved with {lang}” 이라는 문자열이 존재할 때,<br>이 문자열의 앞 뒤로 <code>&lt;h1&gt;</code>, <code>&lt;em&gt;</code> 태그가 붙도록 하는 데코레이터를 생성하세요</p></blockquote></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># decorator 2개 사용</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_tag_em</span>(<span class="params">func</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">name, lang</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;&lt;em&gt; <span class="subst">&#123;func(name, lang)&#125;</span> &lt;/em&gt;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_tag_h1</span>(<span class="params">func</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">name, lang</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;&lt;h1&gt; <span class="subst">&#123;func(name, lang)&#125;</span> &lt;/h1&gt;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@get_tag_h1</span></span><br><span class="line"><span class="meta">@get_tag_em</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_msg</span>(<span class="params">name, lang</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;Hi, <span class="subst">&#123;name&#125;</span>, You might be loved with <span class="subst">&#123;lang&#125;</span>&quot;</span></span><br><span class="line">print(print_msg(<span class="string">&#x27;JH&#x27;</span>, <span class="string">&#x27;Python&#x27;</span>))</span><br><span class="line"><span class="string">&quot;&quot;&quot;out:</span></span><br><span class="line"><span class="string">&lt;h1&gt; &lt;em&gt; Hi, JH, You might be loved with Python &lt;/em&gt; &lt;/h1&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># decorator 1개 사용</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_tag_h1_em</span>(<span class="params">func</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">name, lang</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;&lt;h1&gt;&lt;em&gt; <span class="subst">&#123;func(name, lang)&#125;</span> &lt;/em&gt;&lt;/h1&gt;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@get_tag_h1_em</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_msg</span>(<span class="params">name, lang</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;Hi, <span class="subst">&#123;name&#125;</span>, You might be loved with <span class="subst">&#123;lang&#125;</span>&quot;</span></span><br><span class="line">print(print_msg(<span class="string">&#x27;JH&#x27;</span>, <span class="string">&#x27;Python&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;out:</span></span><br><span class="line"><span class="string">&lt;h1&gt;&lt;em&gt; Hi, JH, You might be loved with Python &lt;/em&gt;&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># decorator 1개 사용 + tag값 입력</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_tag_h1_em</span>(<span class="params">func</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">name, lang, tag1, tag2</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;&lt;<span class="subst">&#123;tag1&#125;</span>&gt;&lt;<span class="subst">&#123;tag2&#125;</span>&gt; <span class="subst">&#123;func(name, lang, tag1, tag2)&#125;</span> &lt;/<span class="subst">&#123;tag2&#125;</span>&gt;&lt;/<span class="subst">&#123;tag1&#125;</span>&gt;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@get_tag_h1_em</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_msg</span>(<span class="params">name, lang, tag1, tag2</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;Hi, <span class="subst">&#123;name&#125;</span>, You might be loved with <span class="subst">&#123;lang&#125;</span>&quot;</span></span><br><span class="line">print(print_msg(<span class="string">&#x27;JH&#x27;</span>, <span class="string">&#x27;Python&#x27;</span>, <span class="string">&#x27;h2&#x27;</span>, <span class="string">&#x27;strong&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 이렇게 하면 데코레이터를 사용하는 의미가 없는 것 같은데...</span></span><br></pre></td></tr></table></figure><hr><p>-20.02.17 내용 추가-<br>오늘 강사님이 <code>decorator</code>안에 parameter를 넣을 수 있다고 해서 찾아보고 이 문제에 적용해봤다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deco_input</span>(<span class="params">tag1, tag2</span>):</span> <span class="comment"># 데코레이터에 파라미터를 넣어주기 위한 함수</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_tag_h1_em</span>(<span class="params">func</span>):</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span>(<span class="params">name, lang</span>):</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&quot;&lt;<span class="subst">&#123;tag2&#125;</span>&gt;&lt;<span class="subst">&#123;tag1&#125;</span>&gt; <span class="subst">&#123;func(name, lang)&#125;</span> &lt;/<span class="subst">&#123;tag1&#125;</span>&gt;&lt;/<span class="subst">&#123;tag2&#125;</span>&gt;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> wrapper</span><br><span class="line">    <span class="keyword">return</span> get_tag_h1_em <span class="comment"># 데코레이터가 get_tag_h1_em에서 deco_input으로 바뀌기 때문에</span></span><br><span class="line">                         <span class="comment"># get_tag_h1_em을 리턴해줬다. </span></span><br><span class="line"></span><br><span class="line"><span class="meta">@deco_input(<span class="params"><span class="string">&#x27;h1&#x27;</span>, <span class="string">&#x27;em&#x27;</span></span>) </span><span class="comment"># 데코레이터 안에 파라미터 추가</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_msg</span>(<span class="params">name, lang</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;Hi, <span class="subst">&#123;name&#125;</span>, You might be loved with <span class="subst">&#123;lang&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">print(print_msg(<span class="string">&#x27;JH&#x27;</span>, <span class="string">&#x27;Python&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;out:</span></span><br><span class="line"><span class="string">&lt;h2&gt;&lt;strong&gt; Hi, JH, You might be loved with Python &lt;/strong&gt;&lt;/h2&gt;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/python/">python</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/python/">python</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/16/decorator-practice/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210215 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/15/20210215-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/15/20210215-TIL/</guid>
      <pubDate>Mon, 15 Feb 2021 14:43:36 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;파이썬 강의 내용 복습&lt;/li&gt;
&lt;li&gt;[HackerRank] Day 9 풀이&lt;/li&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>파이썬 강의 내용 복습</li><li>[HackerRank] Day 9 풀이</li><li>pyenv에서 system을 찾지 못하는 현상 글 작성</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>[HackerRank] Day 10 풀이</li><li>pyenv, virtualenv, poetry 설치 정리해서 글 작성</li><li>파이썬 Decorator 문제 풀이</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/15/20210215-TIL/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
