<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JH&#39;s dev blog</title>
    <link>https://juhyeong-k.github.io/</link>
    
    <atom:link href="https://juhyeong-k.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>All about dev</description>
    <pubDate>Mon, 29 Mar 2021 12:53:22 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>20210329 TIL Todos 복습</title>
      <link>https://juhyeong-k.github.io/2021/03/29/20210329-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/29/20210329-TIL/</guid>
      <pubDate>Mon, 29 Mar 2021 12:24:47 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;server.js&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>server.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> todos = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">&quot;HTML&quot;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">&quot;CSS&quot;</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">&quot;Javascript&quot;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">app.use(express.static(<span class="string">&quot;public&quot;</span>)); <span class="comment">// 루트 폴더로 지정</span></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&quot;/todos&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.send(todos);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// app.get(&quot;/&quot;, (req, res) =&gt; &#123;</span></span><br><span class="line"><span class="comment">//   res.send(&quot;Hellooooooo!&quot;);</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">9000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;안녕하세요! 저는 9000번에서 대기중인 서버입니다!&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>app.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> todos = [];</span><br><span class="line"><span class="keyword">const</span> $todos = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.todos&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> $inputTodo = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.input-todo&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> render = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  $todos.innerHTML = todos</span><br><span class="line">    .map(<span class="function">(<span class="params">&#123; id, content, completed &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">`&lt;li id=<span class="subst">$&#123;id&#125;</span> class=&quot;todo-item&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;input id=&quot;ck-<span class="subst">$&#123;id&#125;</span>&quot; class=&quot;checkbox&quot; type=&quot;checkbox&quot;<span class="subst">$&#123;</span></span></span><br><span class="line"><span class="string"><span class="subst">        completed ? <span class="string">&quot;checked&quot;</span> : <span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="string"><span class="subst">      &#125;</span>&gt;&lt;label for=&quot;ck-<span class="subst">$&#123;id&#125;</span>&quot;&gt;<span class="subst">$&#123;content&#125;</span>&lt;/label&gt;</span></span><br><span class="line"><span class="string">            &lt;i class=&quot;remove-todo far fa-times-circle&quot;&gt;&lt;/i&gt;&lt;/li&gt;`</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .join(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(todos);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getTodos = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> res = <span class="keyword">await</span> fetch(<span class="string">&quot;/todos&quot;</span>);</span><br><span class="line">  todos = <span class="keyword">await</span> res.json();</span><br><span class="line"></span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&quot;DOMContentLoaded&quot;</span>, getTodos);</span><br><span class="line"></span><br><span class="line"><span class="comment">// add</span></span><br><span class="line"><span class="keyword">const</span> addTodo = <span class="function">(<span class="params">content</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> todo = &#123;</span><br><span class="line">    id: <span class="built_in">Math</span>.max(...todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id), <span class="number">0</span>) + <span class="number">1</span>,</span><br><span class="line">    content,</span><br><span class="line">    completed: <span class="literal">false</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  todos = [todo, ...todos];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$inputTodo.onkeypress = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (e.key !== <span class="string">&quot;Enter&quot;</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">const</span> content = $inputTodo.value;</span><br><span class="line">  $inputTodo.value = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  addTodo(content);</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// remove</span></span><br><span class="line">$todos.onclick = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!e.target.classList.contains(<span class="string">&quot;remove-todo&quot;</span>)) <span class="keyword">return</span>;</span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id !== +e.target.parentNode.id);</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//toggle</span></span><br><span class="line"><span class="keyword">const</span> toggleTodo = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span></span><br><span class="line">    todo.id === +id ? &#123; ...todo, <span class="attr">completed</span>: !todo.completed &#125; : todo</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$todos.onchange = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> id = e.target.parentNode.id;</span><br><span class="line">  toggleTodo(id);</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// complete all todos</span></span><br><span class="line"><span class="keyword">const</span> $completeAll = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.complete-all&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> markAllTodos = <span class="function">(<span class="params">complete</span>) =&gt;</span> &#123;</span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> (&#123; ...todo, complete &#125;));</span><br><span class="line">&#125;;</span><br><span class="line">$completeAll.onchange = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> complete = e.target.checked;</span><br><span class="line">  markAllTodos(complete);</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/JS/">JS</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/29/20210329-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210328 TIL 키보드 이벤트 한글 입력 문제</title>
      <link>https://juhyeong-k.github.io/2021/03/28/20210328-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/28/20210328-TIL/</guid>
      <pubDate>Sun, 28 Mar 2021 07:02:45 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;키보드-이벤트-한글-입력-문제&quot;&gt;&lt;a href=&quot;#키보드-이벤트-한글-입력-문제&quot; class=&quot;headerlink&quot; title=&quot;키보드 이벤트 한글 입력 문제&quot;&gt;&lt;/a&gt;키보드 이벤트 한글 입력 문제&lt;/h1&gt;&lt;p&gt;&lt;code&gt;keydown&lt;/code&gt; - 키가 눌릴 때 이벤트 발생&lt;br&gt;&lt;code&gt;keypress&lt;/code&gt; - 웹 표준에서 deprecated 되었기 때문에 사용하지 않는 게 좋다.&lt;br&gt;&lt;code&gt;keyup&lt;/code&gt; - 키가 떼질 때 이벤트 발생&lt;/p&gt;
&lt;p&gt;위의 이벤트가 발생하면 &lt;code&gt;KeyboardEvent&lt;/code&gt; 타입의 이벤트 객체가 생성된다.&lt;br&gt;영어의 키입력은 문제 없지만, 한글을 입력할 때 문제가 생긴다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;keyup&lt;/code&gt; 이벤트가 발생했을 때,  이벤트 객체는 printable key인 한글을 입력할 때 객체가 생성되지도 않는다. 심지어 한글키로 바꿨을 때 다른 Modifier key들은 출력이 되지만, &lt;code&gt;Enter&lt;/code&gt;키는 &lt;code&gt;Enter&lt;/code&gt;키 자체가 객체로 생성되지 않아서 &lt;code&gt;Enter&lt;/code&gt;키를 인식할 수 없다.(리눅스환경 기준)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;keydown&lt;/code&gt; 이벤트가 발생했을 때, 이벤트 객체를 출력해보면 printable key인 한글을 입력했을 때 이벤트 객체가 생성은 되지만, key값으로는 &lt;code&gt;Unidentified&lt;/code&gt;를 반환한다. Modifier key들은 정상적으로 출력이 된다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="키보드-이벤트-한글-입력-문제"><a href="#키보드-이벤트-한글-입력-문제" class="headerlink" title="키보드 이벤트 한글 입력 문제"></a>키보드 이벤트 한글 입력 문제</h1><p><code>keydown</code> - 키가 눌릴 때 이벤트 발생<br><code>keypress</code> - 웹 표준에서 deprecated 되었기 때문에 사용하지 않는 게 좋다.<br><code>keyup</code> - 키가 떼질 때 이벤트 발생</p><p>위의 이벤트가 발생하면 <code>KeyboardEvent</code> 타입의 이벤트 객체가 생성된다.<br>영어의 키입력은 문제 없지만, 한글을 입력할 때 문제가 생긴다.</p><p><code>keyup</code> 이벤트가 발생했을 때,  이벤트 객체는 printable key인 한글을 입력할 때 객체가 생성되지도 않는다. 심지어 한글키로 바꿨을 때 다른 Modifier key들은 출력이 되지만, <code>Enter</code>키는 <code>Enter</code>키 자체가 객체로 생성되지 않아서 <code>Enter</code>키를 인식할 수 없다.(리눅스환경 기준)</p><p><code>keydown</code> 이벤트가 발생했을 때, 이벤트 객체를 출력해보면 printable key인 한글을 입력했을 때 이벤트 객체가 생성은 되지만, key값으로는 <code>Unidentified</code>를 반환한다. Modifier key들은 정상적으로 출력이 된다.</p><p>결국 <code>Enter</code>키를 인식하기 위해서 <code>keyup</code> 이벤트 대신 <code>keydown</code> 이벤트를 사용해서 해결했다.</p><p>IME(Input Method Editor) - 입력기(입력 방식 편집기)는 한글, 한자처럼 컴퓨터 자판에 있는 글자보다 수가 더 많은 문자를 계산하거나 좋바하여 입력해주는 시스템 소프트웨어<br>Modifier key - Shift, Ctrl, Alt 등 키보드의 입력을 보조해주는 키<br>printable key - 문자를 출력하는 키</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://kjwsx23.tistory.com/557">https://kjwsx23.tistory.com/557</a><br><a href="https://maxkim-j.github.io/posts/keyboard-input">https://maxkim-j.github.io/posts/keyboard-input</a></p>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/JS/">JS</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/28/20210328-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210327 TIL</title>
      <link>https://juhyeong-k.github.io/2021/03/27/20210327-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/27/20210327-TIL/</guid>
      <pubDate>Sat, 27 Mar 2021 12:12:16 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;이력서 초안 작성&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;TodoList 자바스크립트 코드</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li><p>이력서 초안 작성</p></li><li><p>TodoList 자바스크립트 코드 리팩토링</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/27/20210327-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210326 TIL Pair-Programming</title>
      <link>https://juhyeong-k.github.io/2021/03/26/20210326-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/26/20210326-TIL/</guid>
      <pubDate>Fri, 26 Mar 2021 12:39:08 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Pair-Programming-Todo-List&quot;&gt;&lt;a href=&quot;#Pair-Programming-Todo-List&quot; class=&quot;headerlink&quot; title=&quot;Pair-Programming - Todo List&quot;&gt;&lt;/a&gt;Pair-P</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Pair-Programming-Todo-List"><a href="#Pair-Programming-Todo-List" class="headerlink" title="Pair-Programming - Todo List"></a>Pair-Programming - Todo List</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// State</span></span><br><span class="line"><span class="keyword">let</span> todos = [];</span><br><span class="line"><span class="keyword">const</span> $inputTodo = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.input-todo&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> $todos = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.todos&quot;</span>);</span><br><span class="line"><span class="comment">// count</span></span><br><span class="line"><span class="keyword">const</span> countCompletedTodos = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> $completedCount = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.completed).length;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">&quot;.completed-todos&quot;</span>).textContent = $completedCount;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">&quot;.active-todos&quot;</span>).textContent =</span><br><span class="line">    todos.length - $completedCount;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> render = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  $todos.innerHTML = todos</span><br><span class="line">    .map(<span class="function">(<span class="params">&#123; id, content, completed &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">`&lt;li id=<span class="subst">$&#123;id&#125;</span> class=&quot;todo-item&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;input id=&quot;ck-<span class="subst">$&#123;id&#125;</span>&quot; class=&quot;checkbox&quot; type=&quot;checkbox&quot; <span class="subst">$&#123;</span></span></span><br><span class="line"><span class="string"><span class="subst">        completed ? <span class="string">&quot;checked&quot;</span> : <span class="string">&quot;&quot;</span></span></span></span><br><span class="line"><span class="string"><span class="subst">      &#125;</span>&gt;</span></span><br><span class="line"><span class="string">    &lt;label for=&quot;ck-<span class="subst">$&#123;id&#125;</span>&quot;&gt;<span class="subst">$&#123;content&#125;</span>&lt;/label&gt;</span></span><br><span class="line"><span class="string">    &lt;i class=&quot;remove-todo far fa-times-circle&quot;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">    &lt;/li&gt;`</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    .join(<span class="string">&quot;&quot;</span>);</span><br><span class="line">  countCompletedTodos();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getTodos = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  todos = [</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">&quot;가나다&quot;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">&quot;CSS&quot;</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">&quot;Javascript&quot;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">  ];</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 초기 렌더링</span></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">&quot;DOMContentLoaded&quot;</span>, getTodos);</span><br><span class="line"></span><br><span class="line"><span class="comment">// add todo</span></span><br><span class="line"><span class="keyword">const</span> addTodo = <span class="function">(<span class="params">content</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> todo = &#123;</span><br><span class="line">    id: <span class="built_in">Math</span>.max(...todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id), <span class="number">0</span>) + <span class="number">1</span>,</span><br><span class="line">    content,</span><br><span class="line">    completed: <span class="literal">false</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  todos = [todo, ...todos];</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">$inputTodo.onkeydown = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// if (e.key !== &quot;Enter&quot;) return; // 이벤트 객체가 &quot;Enter&quot;키가 아니면 리턴</span></span><br><span class="line">  <span class="comment">// if (!$inputTodo.value) return; // 빈문자열 일때 리턴</span></span><br><span class="line">  <span class="comment">// if (e.key !== &quot;Enter&quot; || !$inputTodo.value) return; // 이해하기 힘든 방법</span></span><br><span class="line">  <span class="comment">// 쉬운 방법</span></span><br><span class="line">  <span class="keyword">if</span> (e.key === <span class="string">&quot;Enter&quot;</span> &amp;&amp; $inputTodo.value) &#123;</span><br><span class="line">    <span class="keyword">const</span> content = $inputTodo.value;</span><br><span class="line">    $inputTodo.value = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    addTodo(content);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// remove todo</span></span><br><span class="line">$todos.onclick = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!e.target.classList.contains(<span class="string">&quot;remove-todo&quot;</span>)) <span class="keyword">return</span>;</span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> todo.id !== +e.target.parentNode.id);</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// checkbox toggle</span></span><br><span class="line"><span class="keyword">const</span> toggleTodo = <span class="function">(<span class="params">$id</span>) =&gt;</span> &#123;</span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span></span><br><span class="line">    todo.id === +$id ? &#123; ...todo, <span class="attr">completed</span>: !todo.completed &#125; : todo</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line">$todos.onchange = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> $id = e.target.parentNode.id;</span><br><span class="line">  toggleTodo($id);</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// check-all-button</span></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&quot;.complete-all&quot;</span>).onchange = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (!e.target.checked) <span class="keyword">return</span>;</span><br><span class="line">  todos = todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; ...todo, <span class="attr">completed</span>: <span class="literal">true</span> &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">&quot;.btn&quot;</span>).onclick = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  todos = todos.filter(<span class="function">(<span class="params">todo</span>) =&gt;</span> !todo.completed);</span><br><span class="line">  render();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 텍스트가 길어질 때 자동으로 들여쓰기</span></span><br><span class="line"><span class="comment">// 한글 입력 문제 -&gt; onkeyup에서 onkeydown으로 변경해서 해결</span></span><br><span class="line"><span class="comment">// const $removeTodo = document.querySelector(&quot;.remove-todo&quot;); &gt;&gt; i태그 값이 null??</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/JS/">JS</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/26/20210326-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210325 TIL</title>
      <link>https://juhyeong-k.github.io/2021/03/25/20210325-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/25/20210325-TIL/</guid>
      <pubDate>Thu, 25 Mar 2021 01:05:49 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;요소-노드의-텍스트-조작&quot;&gt;&lt;a href=&quot;#요소-노드의-텍스트-조작&quot; class=&quot;headerlink&quot; title=&quot;요소 노드의 텍스트 조작&quot;&gt;&lt;/a&gt;요소 노드의 텍스트 조작&lt;/h3&gt;&lt;p&gt;노드 탐색, 노드 정보 프로퍼티는 모두 읽기 전용 접근자 프로퍼티지만, 텍스트를 조작하는&lt;br&gt;&lt;code&gt;Node.prototype.nodeValue&lt;/code&gt;, &lt;code&gt;Node.prototype.textContent&lt;/code&gt;, &lt;code&gt;Node.prototype.innerText&lt;/code&gt; 프로퍼티는 모두 setter와 getter 모두 존재하므로 참조와 할당이 모두 가능한 접근자 프로퍼티다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;nodeValue&lt;br&gt;텍스트 노드의 nodeValue 프로퍼티를 참조할 때만 텍스트 노드의 값을 반환한다. 텍스트 노드가 아닌 노드 객체는 null을 반환한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;textContent&lt;br&gt;nodeValue와 달리 요소 노드의 textContent 프로퍼티를 참조하면 요소 노드의 콘텐츠 영역 내의 HTML마크업을 제외한 모든 텍스트를 반환한다. 주의해야할 점은 요소 노드의 textContent 프로퍼티에 문자열을 할당하면, 요소 노도의 모든 자식 노드가 제거되고 할당한 문자열만 텍스트 노드로 추가된다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;innerText&lt;br&gt;textContent와 비슷한 역할을 하지만 innerText 프로퍼티는 CSS에 의해 비표시로 지정된 요소 노드의 텍스트를 반환하지 않고 CSS를 고려해야 해서 textContent보다 느리다. 결국 textContent를 사용하는게 낫다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;innerHTML&lt;br&gt;setter, getter 모두 존재하는 접근자 프로퍼티로서 요소 노드의 콘텐츠 영역 내에 포함된 모든 HTML 마크업을 문자로 반환한다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;DOM은 노드를 직접 생성/삽입/삭제/치환하는 메서드도 제공한다.&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE &lt;span class=&quot;meta-keyword&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;X-UA-Compatible&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;IE=edge&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;width=device-width, initial-scale=1.0&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;fruits&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;Apple&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; $fruits = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&amp;quot;fruits&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; $apple = $fruits.firstElementChild;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 노드 생성, 삽입&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; $newLi = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&amp;quot;li&amp;quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 요소 노드 생성&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; $newText = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createTextNode(&lt;span class=&quot;string&quot;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 텍스트 노드 생성&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    $newLi.appendChild($newText); &lt;span class=&quot;comment&quot;&gt;// 요소 노드의 자식으로 텍스트 노드 추가&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    $fruits.appendChild($newLi); &lt;span class=&quot;comment&quot;&gt;// 기존 DOM에 요소 노드 추가하면서 리플로우, 리페인트 발생&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 노드 교체&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; $replaceLi = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&amp;quot;li&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    $replaceLi.textContent = &lt;span class=&quot;string&quot;&gt;&amp;quot;hi!&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    $fruits.replaceChild($replaceLi, $newLi); &lt;span class=&quot;comment&quot;&gt;// $newLi 요소 노드 대신 $replaceLi 요소 노드로 교체&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 노드 삭제&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    $fruits.removeChild($fruits.lastElementChild); &lt;span class=&quot;comment&quot;&gt;// $fruits 요소 노드의 마지막 요소를 DOM에서 삭제&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 노드 복사(얕은 복사 이용)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; $shallowClone = $apple.cloneNode();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    $shallowClone.textContent = &lt;span class=&quot;string&quot;&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $fruits.appendChild($shallowClone);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 노드 복사(깊은 복사 이용)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; $deepClone = $fruits.cloneNode(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $fruits.appendChild($deepClone);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h3 id="요소-노드의-텍스트-조작"><a href="#요소-노드의-텍스트-조작" class="headerlink" title="요소 노드의 텍스트 조작"></a>요소 노드의 텍스트 조작</h3><p>노드 탐색, 노드 정보 프로퍼티는 모두 읽기 전용 접근자 프로퍼티지만, 텍스트를 조작하는<br><code>Node.prototype.nodeValue</code>, <code>Node.prototype.textContent</code>, <code>Node.prototype.innerText</code> 프로퍼티는 모두 setter와 getter 모두 존재하므로 참조와 할당이 모두 가능한 접근자 프로퍼티다.</p><ul><li><p>nodeValue<br>텍스트 노드의 nodeValue 프로퍼티를 참조할 때만 텍스트 노드의 값을 반환한다. 텍스트 노드가 아닌 노드 객체는 null을 반환한다.</p></li><li><p>textContent<br>nodeValue와 달리 요소 노드의 textContent 프로퍼티를 참조하면 요소 노드의 콘텐츠 영역 내의 HTML마크업을 제외한 모든 텍스트를 반환한다. 주의해야할 점은 요소 노드의 textContent 프로퍼티에 문자열을 할당하면, 요소 노도의 모든 자식 노드가 제거되고 할당한 문자열만 텍스트 노드로 추가된다.</p></li><li><p>innerText<br>textContent와 비슷한 역할을 하지만 innerText 프로퍼티는 CSS에 의해 비표시로 지정된 요소 노드의 텍스트를 반환하지 않고 CSS를 고려해야 해서 textContent보다 느리다. 결국 textContent를 사용하는게 낫다.</p></li><li><p>innerHTML<br>setter, getter 모두 존재하는 접근자 프로퍼티로서 요소 노드의 콘텐츠 영역 내에 포함된 모든 HTML 마크업을 문자로 반환한다.</p></li></ul><p>DOM은 노드를 직접 생성/삽입/삭제/치환하는 메서드도 제공한다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;fruits&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>Apple<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $fruits = <span class="built_in">document</span>.getElementById(<span class="string">&quot;fruits&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $apple = $fruits.firstElementChild;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 노드 생성, 삽입</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $newLi = <span class="built_in">document</span>.createElement(<span class="string">&quot;li&quot;</span>); <span class="comment">// 요소 노드 생성</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $newText = <span class="built_in">document</span>.createTextNode(<span class="string">&quot;hello&quot;</span>); <span class="comment">// 텍스트 노드 생성</span></span></span><br><span class="line"><span class="javascript">    $newLi.appendChild($newText); <span class="comment">// 요소 노드의 자식으로 텍스트 노드 추가</span></span></span><br><span class="line"><span class="javascript">    $fruits.appendChild($newLi); <span class="comment">// 기존 DOM에 요소 노드 추가하면서 리플로우, 리페인트 발생</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 노드 교체</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $replaceLi = <span class="built_in">document</span>.createElement(<span class="string">&quot;li&quot;</span>);</span></span><br><span class="line"><span class="javascript">    $replaceLi.textContent = <span class="string">&quot;hi!&quot;</span>;</span></span><br><span class="line"><span class="javascript">    $fruits.replaceChild($replaceLi, $newLi); <span class="comment">// $newLi 요소 노드 대신 $replaceLi 요소 노드로 교체</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 노드 삭제</span></span></span><br><span class="line"><span class="javascript">    $fruits.removeChild($fruits.lastElementChild); <span class="comment">// $fruits 요소 노드의 마지막 요소를 DOM에서 삭제</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 노드 복사(얕은 복사 이용)</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $shallowClone = $apple.cloneNode();</span></span><br><span class="line"><span class="javascript">    $shallowClone.textContent = <span class="string">&quot;orange&quot;</span>;</span></span><br><span class="line">    $fruits.appendChild($shallowClone);</span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 노드 복사(깊은 복사 이용)</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $deepClone = $fruits.cloneNode(<span class="literal">true</span>);</span></span><br><span class="line">    $fruits.appendChild($deepClone);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="이벤트"><a href="#이벤트" class="headerlink" title="이벤트"></a>이벤트</h1><p>브라우저는 처리해야 할 특정 사건이 발생하면 이를 감지해서 이벤트(event)를 발생(trigger)시킨다. 이벤트가 발생했을 때 호출될 함수를 이벤트 핸들러(event handler)라 하고 이벤트가 발생했을 때 브라우저에게 이벤트 핸들러의 호출을 위임하는 것을 이벤트 핸들러 등록이라 한다.<br>프로그램의 흐름을 이벤트 중심으로 제어하는 프로그래밍 방식을 이벤트 드리븐 프로그래밍(event-driven programming)이라 한다.</p><h3 id="이벤트-핸들러-어트리뷰트-방식"><a href="#이벤트-핸들러-어트리뷰트-방식" class="headerlink" title="이벤트 핸들러 어트리뷰트 방식"></a>이벤트 핸들러 어트리뷰트 방식</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;sayHi(&#x27;Kim&#x27;)&quot;</span>&gt;</span>Click me!<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">name</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">`Hi! <span class="subst">$&#123;name&#125;</span>.`</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>이벤트 핸들러 등록이란 함수 호출을 브라우저에게 위임하는 것이라서 등록할 때 함수 참조를 등록해야 브라우저가 이벤트 핸들러를 호출할 수 있다. 만약 함수 참조가 아닌 함수 호출문을 등록한다면 함수 호출문의 평가 결과가 이벤트 핸들러로 등록된다.<br>이벤트 핸들러 어트리뷰트 방식을 보면 함수 참조가 아닌 함수 호출문으로 이벤트 핸들러 어트리뷰트 값에 할당한걸 볼 수 있는데, 이벤트 핸들러 어트리뷰트 값은 암묵적으로 생성될 이벤트 핸들러의 함수 몸체를 의미한다. </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// onclick=&quot;sayHi(&#x27;Kim&#x27;)&quot; 암묵적으로 아래 함수 생성</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onclick</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  sayHi(<span class="string">&#x27;Lee&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이벤트 핸들러 어트리뷰트 값으로 할당한 문자열은 결국 함수 몸체이기 때문에 아래와 같이</span></span><br><span class="line"><span class="comment">// 여러개의 문을 할당 가능하다.</span></span><br><span class="line"><span class="comment">// onclick=&quot;console.log(&#x27;Hi! &#x27;); console.log(&#x27;Lee&#x27;);&quot;</span></span><br></pre></td></tr></table></figure><p>이와 같이 동작하는 이유는 이벤트 핸들러에 인수를 전달해주기 위해서다. 함수 참조를 할당해야 한다면 이벤트 핸들러에 인수를 전달하기 힘들다.</p><h3 id="이벤트-핸들러-프로퍼티-방식"><a href="#이벤트-핸들러-프로퍼티-방식" class="headerlink" title="이벤트 핸들러 프로퍼티 방식"></a>이벤트 핸들러 프로퍼티 방식</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>Click me!<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $button = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 이벤트 핸들러 프로퍼티에 이벤트 핸들러를 바인딩</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 이벤트 타깃.on+이벤트 타입 = 이벤트 핸들러</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 이벤트 핸들러 어트리뷰트 방식의 HTML과 자바스크립트가 섞이는 문제 해결</span></span></span><br><span class="line"><span class="javascript">    $button.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">&#x27;button click&#x27;</span>);</span></span><br><span class="line">    &#125;;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="addEventListener-메서드-방식"><a href="#addEventListener-메서드-방식" class="headerlink" title="addEventListener 메서드 방식"></a>addEventListener 메서드 방식</h3><p>addEventListner 메서드 방식은 어트리뷰트, 프로퍼티 방식과 달리 on접두사를 붙이지 않는다. 총 세 개의 매개변수를 줄 수 있고 첫 번째 매게변수로 문자열인 이벤트 타입을 전달하고, 두번 째로 이벤트 핸들러를 전달한다. 세 번째는 이벤트를 캐치할 이벤트 전파 단계를 지정하는데 생략하거나 false를 지정하면 버블링 단계에서 이벤트를 캐치하고, true를 지정하면 캡처링 단계에서 이벤트를 캐치한다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>Click me!<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $button = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// addEventListener 메서드 방식</span></span></span><br><span class="line"><span class="javascript">    $button.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">&#x27;button click&#x27;</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="이벤트-핸들러-제거"><a href="#이벤트-핸들러-제거" class="headerlink" title="이벤트 핸들러 제거"></a>이벤트 핸들러 제거</h3><p>addEventListener 메서드로 등록한 이벤트 핸들러를 제거하려면 <code>EventTarget.prototype.removeEventListener</code> 메서드를 사용하면 되고, addEventListener 메서드에 전달한 인수와 removeEventListener 메서드에 전달한 인수가 일치해야만 이벤트 핸들러가 제거된다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>Click me!<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> $button = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> handleClick = <span class="function">() =&gt;</span> <span class="built_in">console</span>.log(<span class="string">&#x27;button click&#x27;</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 이벤트 핸들러 등록</span></span></span><br><span class="line"><span class="javascript">    $button.addEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="comment">// 이벤트 핸들러 제거</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// addEventListener 메서드에 전달한 인수와 removeEventListener 메서드에</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 전달한 인수가 일치하지 않으면 이벤트 핸들러가 제거되지 않는다.</span></span></span><br><span class="line"><span class="javascript">    $button.removeEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick, <span class="literal">true</span>); <span class="comment">// 실패</span></span></span><br><span class="line"><span class="javascript">    $button.removeEventListener(<span class="string">&#x27;click&#x27;</span>, handleClick); <span class="comment">// 성공</span></span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 기명 함수를 이벤트 핸들러로 등록</span></span><br><span class="line">$button.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;button click&#x27;</span>);</span><br><span class="line">  <span class="comment">// 이벤트 핸들러를 제거한다. 따라서 이벤트 핸들러는 단 한 번만 호출된다.</span></span><br><span class="line">  $button.removeEventListener(<span class="string">&#x27;click&#x27;</span>, foo);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 무명 함수를 이벤트 핸들러로 등록</span></span><br><span class="line">$button.addEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;button click&#x27;</span>);</span><br><span class="line">  <span class="comment">// 이벤트 핸들러를 제거한다. 따라서 이벤트 핸들러는 단 한 번만 호출된다.</span></span><br><span class="line">  <span class="comment">// arguments.callee는 호출된 함수, 즉 함수 자신을 가리킨다.</span></span><br><span class="line">  $button.removeEventListener(<span class="string">&#x27;click&#x27;</span>, <span class="built_in">arguments</span>.callee);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 이벤트 핸들러 프로퍼티 방식으로 등록한 이벤트 핸들러는</span></span><br><span class="line"><span class="comment">// 이벤트 핸들러 프로퍼티에 null을 할당해서 제거할 수 있다.</span></span><br><span class="line">$button.onclick = handleClick;</span><br><span class="line">$button.onclick = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/JS/">JS</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/25/20210325-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210324 TIL JS</title>
      <link>https://juhyeong-k.github.io/2021/03/24/20210324-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/24/20210324-TIL/</guid>
      <pubDate>Wed, 24 Mar 2021 10:17:44 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;36-디스트럭처링-할당&quot;&gt;&lt;a href=&quot;#36-디스트럭처링-할당&quot; class=&quot;headerlink&quot; title=&quot;36. 디스트럭처링 할당&quot;&gt;&lt;/a&gt;36. 디스트럭처링 할당&lt;/h1&gt;&lt;p&gt;디스트럭처링 할당(destructuring assignment)은 구조화된 배열과 같은 이터러블 또는 객체를 destructuring하여 1개 이상의 변수에 개별적으로 할당하는 것을 말한다.&lt;/p&gt;
&lt;h3 id=&quot;배열-디스트럭처링-할당&quot;&gt;&lt;a href=&quot;#배열-디스트럭처링-할당&quot; class=&quot;headerlink&quot; title=&quot;배열 디스트럭처링 할당&quot;&gt;&lt;/a&gt;배열 디스트럭처링 할당&lt;/h3&gt;&lt;p&gt;배열 디스트럭처링 할당의 대상(할당문의 우변)은 이터러블이어야 하고, 할당 기준은 배열의 인덱스다.&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; [a, b] = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(a, b); &lt;span class=&quot;comment&quot;&gt;// 1 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; [c, d, e] = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(c, d, e); &lt;span class=&quot;comment&quot;&gt;// 1 2 undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; [f, , g] = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(f, g); &lt;span class=&quot;comment&quot;&gt;// 1 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; [h, i, j] = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, , &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(h, i, j); &lt;span class=&quot;comment&quot;&gt;// 1 undefined 3 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; [k, l, m = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(k, l, m);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="36-디스트럭처링-할당"><a href="#36-디스트럭처링-할당" class="headerlink" title="36. 디스트럭처링 할당"></a>36. 디스트럭처링 할당</h1><p>디스트럭처링 할당(destructuring assignment)은 구조화된 배열과 같은 이터러블 또는 객체를 destructuring하여 1개 이상의 변수에 개별적으로 할당하는 것을 말한다.</p><h3 id="배열-디스트럭처링-할당"><a href="#배열-디스트럭처링-할당" class="headerlink" title="배열 디스트럭처링 할당"></a>배열 디스트럭처링 할당</h3><p>배열 디스트럭처링 할당의 대상(할당문의 우변)은 이터러블이어야 하고, 할당 기준은 배열의 인덱스다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> [a, b] = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"><span class="built_in">console</span>.log(a, b); <span class="comment">// 1 2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> [c, d, e] = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"><span class="built_in">console</span>.log(c, d, e); <span class="comment">// 1 2 undefined</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> [f, , g] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line"><span class="built_in">console</span>.log(f, g); <span class="comment">// 1 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> [h, i, j] = [<span class="number">1</span>, , <span class="number">3</span>];</span><br><span class="line"><span class="built_in">console</span>.log(h, i, j); <span class="comment">// 1 undefined 3 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> [k, l, m = <span class="number">1</span>] = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"><span class="built_in">console</span>.log(k, l, m);</span><br></pre></td></tr></table></figure><h3 id="객체-디스트럭처링-할당"><a href="#객체-디스트럭처링-할당" class="headerlink" title="객체 디스트럭처링 할당"></a>객체 디스트럭처링 할당</h3><p>배열의 할당 기준이 인덱스라면 객체의 할당 기준은 프로퍼티 키다. 객체이기 때문에 순서는 의미가 없고 선언된 변수 이름과 프로퍼티 키가 일치하면 할당된다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; lastName, firstName &#125; = &#123; <span class="attr">firstName</span>: <span class="string">&quot;Ungmo&quot;</span>, <span class="attr">lastName</span>: <span class="string">&quot;Lee&quot;</span> &#125;;</span><br><span class="line"><span class="built_in">console</span>.log(firstName, lastName); <span class="comment">// Ungmo Lee</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 식별자 이름을 각각 ln과 fn으로 변경</span></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="attr">lastName</span>: ln, <span class="attr">firstName</span>: fn &#125; = &#123; <span class="attr">firstName</span>: <span class="string">&quot;Ungmo&quot;</span>, <span class="attr">lastName</span>: <span class="string">&quot;Lee&quot;</span> &#125;;</span><br><span class="line"><span class="built_in">console</span>.log(ln, fn); <span class="comment">// Ungmo Lee</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 기본값 할당</span></span><br><span class="line"><span class="keyword">const</span> &#123; firstName = <span class="string">&quot;Ungmo&quot;</span>, lastName &#125; = &#123; <span class="attr">lastName</span>: <span class="string">&quot;Lee&quot;</span> &#125;;</span><br><span class="line"><span class="built_in">console</span>.log(firstName, lastName); <span class="comment">// Ungmo Lee</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// string 래퍼 객체로부터 length 프로퍼티만 추출</span></span><br><span class="line"><span class="keyword">const</span> &#123; length &#125; = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(length);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 객체를 인수로 전달받는 함수의 매개변수에도 사용 가능</span></span><br><span class="line">todos = [</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">&quot;HTML&quot;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">&quot;CSS&quot;</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">&quot;JavaScript&quot;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// todo를 불필요하게 중복해서 입력해주고 있지만</span></span><br><span class="line"><span class="keyword">const</span> printTodos = <span class="function">() =&gt;</span></span><br><span class="line">  todos.map(<span class="function">(<span class="params">todo</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(</span><br><span class="line">      <span class="string">`id = <span class="subst">$&#123;todo.id&#125;</span>, content = <span class="subst">$&#123;todo.content&#125;</span>, completed = <span class="subst">$&#123;todo.completed&#125;</span>`</span></span><br><span class="line">    );</span><br><span class="line">  &#125;);</span><br><span class="line">printTodos();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 객체 디스트럭처링 할당을 사용하면 좀 더 간결하게 사용 가능</span></span><br><span class="line"><span class="keyword">const</span> printTodos2 = <span class="function">() =&gt;</span></span><br><span class="line">  todos.map(<span class="function">(<span class="params">&#123; id, content, completed &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`id = <span class="subst">$&#123;id&#125;</span>, content = <span class="subst">$&#123;content&#125;</span>, completed = <span class="subst">$&#123;completed&#125;</span>`</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">printTodos2();</span><br></pre></td></tr></table></figure><h1 id="39-DOM"><a href="#39-DOM" class="headerlink" title="39. DOM"></a>39. DOM</h1><p>DOM(Document Object Model)은 HTML의 중첩관계를 표현하고 이를 제어할 수 있는 프로퍼티와 메서드를 제공하는 트리 자료구조다.</p><p>HTML 문서는 브라우저의 렌더링 엔진에 의해 파싱되어 DOM을 구성하는 각 노드 객체로 변환된다.(요소 노드, 어트리뷰트 노드, 텍스트 노드)<br>이때 HTML 요소 간에는 중첩 관계에 의해 부자(parent-child)관계가 형성되고 이를 객체화한 모든 노드 객체들을 트리 자료구조로 만든다.<br>부모 노드가 없는 최상위 노드를 루트 노드(root node)라 하고, 자식 노드가 없는 노드를 리프 노드(leaf node)라 한다.</p><p>문서 노드는 DOM 트리의 루트 노드로 다른 노드들에 접근하기 위한 진입점(entry point)역할을 담당하고  document 객체를 가리킨다. 모든 자바스크립트 코드는 전역 객체 window의 document 프로퍼티에 바인딩되어 있는 하나의 document 객체를 바라보고 HTML 문서당 document 객체는 유일한 객체다.</p><p>요소 노드는 HTML요소 간의 중첩에 의해 부자 관계를 가지고 문서의 구조를 표현한다.</p><p>어트리뷰트 노드는 요소노드와 연결되어 있고 부모 노드와는 연결되어 있지 않기 때문에 요소 노드의 형제 노드(sibling node)는 아니다.</p><p>텍스트 노드는 요소 노드의 자식 요소이고 자식 노드를 가질 수 없는 리프 노드(leaf node)다.</p><h3 id="HTMLCollection과-NodeList"><a href="#HTMLCollection과-NodeList" class="headerlink" title="HTMLCollection과 NodeList"></a>HTMLCollection과 NodeList</h3><p>HTMLCollection은 노드 객체의 상태 변화를 실시간으로 반영하는 살아 있는(live) 객체다. NodeList는 대부분의 경우 노드 객체의 상태를 실시간으로 반영하지 않고 과거의 정적 상태를 유지하는 non-live 객체로 동작하지만 경우에 따라 live 객체로 동작할 때가 있다. 결국 두 객체 다 상태 변경을 신경써야 하는 경우가 생기기 때문에 안전하게 DOM 컬렉션을 사용하려면 유사 배열 객체이면서 이터러블인 HTMLCollection이나 NodeList 객체를 배열로 변환하여 사용하는게 낫다.</p><h3 id="노드-탐색-프로퍼티"><a href="#노드-탐색-프로퍼티" class="headerlink" title="노드 탐색 프로퍼티"></a>노드 탐색 프로퍼티</h3><p>노드 탐색 프로퍼티는 모두 setter없이 getter만 존재하여 참조만 가능한 읽기 전용 접근자 프로퍼티다. 읽기 전용 프로퍼티에 값을 할당하면 아무런 에러 없이 무시된다.</p><h3 id="공백-텍스트-노드"><a href="#공백-텍스트-노드" class="headerlink" title="공백 텍스트 노드"></a>공백 텍스트 노드</h3><p>HTML 요소 사이의 스페이스, 탭, 줄바꿈(개행) 등의 공백(white space)문자는 공백 텍스트 노드를 생성한다. <code>childNodes</code>프로퍼티를 이용하면 공백 텍스트 노드까지 포함해서 표현이 가능하지만 <code>children</code>프로퍼티를 사용하면 공백 텍스트 노드를 제외한 요소만 표현된다. 공백 텍스트 노드를 사용하는 게 아니라면 <code>children</code>프로퍼티를 사용하는게 낫다.</p>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/JS/">JS</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/24/20210324-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210323 TIL JS 예습</title>
      <link>https://juhyeong-k.github.io/2021/03/23/20210323-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/23/20210323-TIL/</guid>
      <pubDate>Tue, 23 Mar 2021 04:17:52 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;38-브라우저의-렌더링-과정&quot;&gt;&lt;a href=&quot;#38-브라우저의-렌더링-과정&quot; class=&quot;headerlink&quot; title=&quot;38. 브라우저의 렌더링 과정&quot;&gt;&lt;/a&gt;38. 브라우저의 렌더링 과정&lt;/h1&gt;&lt;h3 id=&quot;요청과-응답&quot;&gt;&lt;a href=&quot;#요청과-응답&quot; class=&quot;headerlink&quot; title=&quot;요청과 응답&quot;&gt;&lt;/a&gt;요청과 응답&lt;/h3&gt;&lt;p&gt;브라우저의 핵심 기능은 필요한 리소스(HTML, CSS, JS, 이미지, 폰트 등)를 서버에 요청(Request)하고 서버로부터 응답(Response)을 받아서 브라우저에 시각적으로 렌더링 한는 것이다. 브라우저의 주소창(URL)으로 서버에 요청을 전송할 수 있다.&lt;/p&gt;
&lt;h3 id=&quot;HTML-파싱과-DOM-생성&quot;&gt;&lt;a href=&quot;#HTML-파싱과-DOM-생성&quot; class=&quot;headerlink&quot; title=&quot;HTML 파싱과 DOM 생성&quot;&gt;&lt;/a&gt;HTML 파싱과 DOM 생성&lt;/h3&gt;&lt;p&gt;브라우저의 요청으로 서버에 존재하는 HTML 파일이 응답되는데, 서버는 브라우저가 요청한 HTML파일을 읽고 메모리에 저장한 뒤, 메모리에 저장된 바이트(2진수)를 인터넷을 경유해서 응답한다.&lt;br&gt;서버가 응답한 바이트로 된 HTML문서를 받은 브라우저는 응답 헤더에 담긴 meta 태그의 charset 어트리뷰트에 선언된 인코딩 방식(ex: UTF-8)을 기준으로 문자열로 변환된다.&lt;br&gt;문자열로 변환된 HTML 문서를 읽고 문법적 의미를 갖는 최소 단위의 코드인 토큰(token)들로 분해한다.&lt;br&gt;각 토큰들을 객체로 변환하여 노드(node)들을 생성하는데, 토큰의 내용에 따라 문서 노드, 요소 노드, 어트리뷰트 노드, 텍스트 노드가 생성된다. 노드는 DOM을 구성하는 기본 요소다.&lt;br&gt;HTML 요소는 중첩 관계를 갖고, 그로 인해 부자 관계가 형성된다. 이러한 관계를 반영하여 모든 노드들을 트리 자료구조로 구성한다. 이 노드들로 구성된 트리 자료구조를 DOM(Document Object Model)이라 부른다.&lt;br&gt;즉 DOM은 HTML 문서를 파싱한 결과물이다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="38-브라우저의-렌더링-과정"><a href="#38-브라우저의-렌더링-과정" class="headerlink" title="38. 브라우저의 렌더링 과정"></a>38. 브라우저의 렌더링 과정</h1><h3 id="요청과-응답"><a href="#요청과-응답" class="headerlink" title="요청과 응답"></a>요청과 응답</h3><p>브라우저의 핵심 기능은 필요한 리소스(HTML, CSS, JS, 이미지, 폰트 등)를 서버에 요청(Request)하고 서버로부터 응답(Response)을 받아서 브라우저에 시각적으로 렌더링 한는 것이다. 브라우저의 주소창(URL)으로 서버에 요청을 전송할 수 있다.</p><h3 id="HTML-파싱과-DOM-생성"><a href="#HTML-파싱과-DOM-생성" class="headerlink" title="HTML 파싱과 DOM 생성"></a>HTML 파싱과 DOM 생성</h3><p>브라우저의 요청으로 서버에 존재하는 HTML 파일이 응답되는데, 서버는 브라우저가 요청한 HTML파일을 읽고 메모리에 저장한 뒤, 메모리에 저장된 바이트(2진수)를 인터넷을 경유해서 응답한다.<br>서버가 응답한 바이트로 된 HTML문서를 받은 브라우저는 응답 헤더에 담긴 meta 태그의 charset 어트리뷰트에 선언된 인코딩 방식(ex: UTF-8)을 기준으로 문자열로 변환된다.<br>문자열로 변환된 HTML 문서를 읽고 문법적 의미를 갖는 최소 단위의 코드인 토큰(token)들로 분해한다.<br>각 토큰들을 객체로 변환하여 노드(node)들을 생성하는데, 토큰의 내용에 따라 문서 노드, 요소 노드, 어트리뷰트 노드, 텍스트 노드가 생성된다. 노드는 DOM을 구성하는 기본 요소다.<br>HTML 요소는 중첩 관계를 갖고, 그로 인해 부자 관계가 형성된다. 이러한 관계를 반영하여 모든 노드들을 트리 자료구조로 구성한다. 이 노드들로 구성된 트리 자료구조를 DOM(Document Object Model)이라 부른다.<br>즉 DOM은 HTML 문서를 파싱한 결과물이다.</p><h3 id="CSS-파싱과-CSSOM-생성"><a href="#CSS-파싱과-CSSOM-생성" class="headerlink" title="CSS 파싱과 CSSOM 생성"></a>CSS 파싱과 CSSOM 생성</h3><p>렌더링 엔진은 HTML을 처음부터 한 줄씩 순차적으로 파싱(Parsing)하여 DOM을 생성해나가다가 CSS를 로드하는 link태그나 style태그를 만나면 DOM생성을 일시 중단한다. 그리고 link태그의 href어트리뷰트에 지정된 CSS파일을 서버에 요청 하고, 로드한 CSS파일(혹은 style태그 내의 CSS)을 HTML과 동일한 파싱과정(바이트-&gt;문자-&gt;토큰-&gt;노드-&gt;CSSDOM)을 거치고 해석하여 CSSOM(CSS Object Model)을 생성한다. CSS파싱이 완료되면 HTML 파싱이 중단된 지점부터 다시 HTML 파싱을 시작해 DOM생성을 재개한다.</p><h3 id="렌더-트리-생성"><a href="#렌더-트리-생성" class="headerlink" title="렌더 트리 생성"></a>렌더 트리 생성</h3><p>렌더링 엔진에 의해 생성된 DOM과 CSSOM은 렌더링을 위해 렌더 트리(render tree)로 결합된다. 렌더 트리는 결국 렌더링을 위한 트리 구조의 자료구조이므로, 브라우저 화면에 렌더링 되지 않는 노드(meta태그, script태그 등)와 CSS에 의해 비표시되는(<code>diplay: none</code>) 노드들은 포함되지 않는다. 완성된 렌더 트리는 각 HTML 요소의 레이아웃(위치, 크기)을 계산하는데 사용되고 브라우저 화면에 픽셀을 렌더링하는 페인팅(painting)처리에 입력된다. 레이아웃 계산과 페인팅을 다시하는 리렌더링(reflow, repaint)은 비용이 많이 드는(성능에 악영향을 주는) 작업이므로, 가급적 리렌더링이 빈번하게 발생하지 않도록 주의해야 한다.</p><h3 id="자바스크립트-파싱과-실행"><a href="#자바스크립트-파싱과-실행" class="headerlink" title="자바스크립트 파싱과 실행"></a>자바스크립트 파싱과 실행</h3><p>렌더링 엔진이 DOM과 CSSOM을 생성하듯이 자바스크립트 엔진은 자바스크립트를 해석하여 AST(Abstract Syntax Tree, 추상적 구문 트리)를 생성한다.</p><p>CSS 파싱 과정과 마찬가지로 렌더링 엔진은 HTML을 한 줄씩 순차적으로 파싱하여 DOM을 생성해 나가다가 자바스크립트 파일을 로드하는 script 태그(혹은 자바스크립트 코드를 담은 script 태그)를 만나면 DOM 생성을 일시 중단한다. 그리고 script 태그의 src 어트리뷰트에 정의된 자바스크립트 파일을 서버에 요청하고 응답받은 파일을 파싱하기 위해 자바스크립트 엔진으로 제어권을 넘긴다.(렌더링 엔진-&gt;자바스크립트 엔진) 이후 자바스크립트 파싱과 실행이 종료되면 렌더링 엔진으로 다시 제어권을 넘겨 hTML파싱이 중단된 지점부터 다시 HTML 파싱을 시작하여 DOM 생성을 재개한다.</p><p>토크나이징(tokenizing)을 통해 자바스크립트 소스코드를 어휘 분석(lexical analysis)하여 문법적 의미를 갖는 코드의 최소 단위인 토큰(token)들로 분해 후, 파싱(parsing)을 통해 토큰들의 집합을 구문 분석(syntactic analysis)하여 AST를 생성한다. AST는 토큰에 문법적 의미와 구조를 반영한 트리 구조의 자료구조다. 파싱의 결과물로 생성된 AST는 인터프리터가 실행할 수 있는 중간 코드인 바이트코드로 변환되고 인터프리터에 의해 실행된다.</p><h1 id="39-DOM"><a href="#39-DOM" class="headerlink" title="39. DOM"></a>39. DOM</h1><h3 id="노드"><a href="#노드" class="headerlink" title="노드"></a>노드</h3><p>노드 객체는 총 12개의 종류가 있다. 그 중 중요한 노드는 다음과 같이 4가지다.</p><ul><li>문서 노드(document node)<br>문서 노드는 DOM의 최상위에 존재하는 루트 노드로서, 브라우저가 렌더링한 HTML 문서 전체를 가리키는 document 객체로서 전역 객체 window의 document 프로퍼티에 바인딩 되어 있다.</li><li>요소 노드(element node)<br>요소 노드는 문서의 구조를 표현한다고 할 수 있고 HTML요소 간의 중첩에 의해 부자 관계를 가진다.</li><li>어트리뷰트 노드(attribute node)<br>어트리뷰트 노드는 부모 노드와 연결되어 있지 않고 요소 노드에만 연결되어 있기 때문에 요소 노드의 형제(sibling) 노드는 아니다. 따라서 어트리뷰트 노드에 접근하려면 요소 노드에 먼저 접근해야 한다.</li><li>텍스트 노드(text node)<br>HTML 요소의 텍스트를 가리키는 객체로서 문서의 정보를 표현한다고 할 수 있다. 텍스트 노드는 요소 노드의 자식 노드이고, 자식 노드를 가질 수 없는 리프 노드(leaf node)다. 텍스트 노드에 접근하려면 먼저 부모 노드인 요소 노드에 접근해야 한다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/JS/">JS</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/23/20210323-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>BAEKJOON 스택 10828번</title>
      <link>https://juhyeong-k.github.io/2021/03/22/BAEKJOON-%EC%8A%A4%ED%83%9D-10828%EB%B2%88/</link>
      <guid>https://juhyeong-k.github.io/2021/03/22/BAEKJOON-%EC%8A%A4%ED%83%9D-10828%EB%B2%88/</guid>
      <pubDate>Mon, 22 Mar 2021 11:30:13 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h1&gt;&lt;p&gt;정수를 저장하는 스택을 구현한 다음, 입력으로 주어지는 명령을 처리하는 프로그램을 작성하시오.&lt;/p&gt;
&lt;p&gt;명령은 총 다섯 가지이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;push X: 정수 X를 스택에 넣는 연산이다.&lt;/li&gt;
&lt;li&gt;pop: 스택에서 가장 위에 있는 정수를 빼고, 그 수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.&lt;/li&gt;
&lt;li&gt;size: 스택에 들어있는 정수의 개수를 출력한다.&lt;/li&gt;
&lt;li&gt;empty: 스택이 비어있으면 1, 아니면 0을 출력한다.&lt;/li&gt;
&lt;li&gt;top: 스택의 가장 위에 있는 정수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;첫째 줄에 주어지는 명령의 수 N (1 ≤ N ≤ 10,000)이 주어진다. 둘째 줄부터 N개의 줄에는 명령이 하나씩 주어진다. 주어지는 정수는 1보다 크거나 같고, 100,000보다 작거나 같다. 문제에 나와있지 않은 명령이 주어지는 경우는 없다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h1><p>정수를 저장하는 스택을 구현한 다음, 입력으로 주어지는 명령을 처리하는 프로그램을 작성하시오.</p><p>명령은 총 다섯 가지이다.</p><ul><li>push X: 정수 X를 스택에 넣는 연산이다.</li><li>pop: 스택에서 가장 위에 있는 정수를 빼고, 그 수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.</li><li>size: 스택에 들어있는 정수의 개수를 출력한다.</li><li>empty: 스택이 비어있으면 1, 아니면 0을 출력한다.</li><li>top: 스택의 가장 위에 있는 정수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.</li></ul><p>첫째 줄에 주어지는 명령의 수 N (1 ≤ N ≤ 10,000)이 주어진다. 둘째 줄부터 N개의 줄에는 명령이 하나씩 주어진다. 주어지는 정수는 1보다 크거나 같고, 100,000보다 작거나 같다. 문제에 나와있지 않은 명령이 주어지는 경우는 없다.</p><p>출력해야하는 명령이 주어질 때마다, 한 줄에 하나씩 출력한다.</p><h1 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">stack = []</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(sys.stdin.readline())):</span><br><span class="line">    command = sys.stdin.readline().split()</span><br><span class="line">    <span class="keyword">if</span> command[<span class="number">0</span>] == <span class="string">&#x27;push&#x27;</span>:</span><br><span class="line">        stack.append(<span class="built_in">int</span>(command[<span class="number">1</span>]))</span><br><span class="line">    <span class="keyword">elif</span> command[<span class="number">0</span>] == <span class="string">&#x27;pop&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(stack) == <span class="number">0</span>:</span><br><span class="line">            print(-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(stack.pop())</span><br><span class="line">    <span class="keyword">elif</span> command[<span class="number">0</span>] == <span class="string">&#x27;size&#x27;</span>:</span><br><span class="line">        print(<span class="built_in">len</span>(stack))</span><br><span class="line">    <span class="keyword">elif</span> command[<span class="number">0</span>] == <span class="string">&#x27;empty&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(stack) == <span class="number">0</span>:</span><br><span class="line">            print(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">elif</span> command[<span class="number">0</span>] == <span class="string">&#x27;top&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(stack) == <span class="number">0</span>:</span><br><span class="line">            print(-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(stack[-<span class="number">1</span>])</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/BAEKJOON/">BAEKJOON</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/BAEKJOON/">BAEKJOON</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/22/BAEKJOON-%EC%8A%A4%ED%83%9D-10828%EB%B2%88/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210322 TIL JS 연습문제 풀이</title>
      <link>https://juhyeong-k.github.io/2021/03/22/20210322-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/22/20210322-TIL/</guid>
      <pubDate>Mon, 22 Mar 2021 11:27:58 GMT</pubDate>
      
      <description>&lt;h3 id=&quot;1-html-생성&quot;&gt;&lt;a href=&quot;#1-html-생성&quot; class=&quot;headerlink&quot; title=&quot;1. html 생성&quot;&gt;&lt;/a&gt;1. html 생성&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; todos = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;HTML&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;completed&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;CSS&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;completed&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;Javascript&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;completed&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;render&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; html = &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    todos.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;todo&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        html += &lt;span class=&quot;string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;        &amp;lt;li id=&amp;quot;&lt;span class=&quot;subst&quot;&gt;$&amp;#123;todo.id&amp;#125;&lt;/span&gt;&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;          &amp;lt;label&amp;gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot; &lt;span class=&quot;subst&quot;&gt;$&amp;#123;todo.completed ? &lt;span class=&quot;string&quot;&gt;&amp;#x27;checked&amp;#x27;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;&amp;#125;&lt;/span&gt;&amp;gt;&lt;span class=&quot;subst&quot;&gt;$&amp;#123;todo.content&amp;#125;&lt;/span&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;        &amp;lt;/li&amp;gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; html;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(render());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;  &amp;lt;li id=&amp;quot;3&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    &amp;lt;label&amp;gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot;&amp;gt;HTML&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;  &amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;  &amp;lt;li id=&amp;quot;2&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    &amp;lt;label&amp;gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot; checked&amp;gt;CSS&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;  &amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;  &amp;lt;li id=&amp;quot;1&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;    &amp;lt;label&amp;gt;&amp;lt;input type=&amp;quot;checkbox&amp;quot;&amp;gt;Javascript&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;  &amp;lt;/li&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-특정-프로퍼티-값-추출&quot;&gt;&lt;a href=&quot;#2-특정-프로퍼티-값-추출&quot; class=&quot;headerlink&quot; title=&quot;2. 특정 프로퍼티 값 추출&quot;&gt;&lt;/a&gt;2. 특정 프로퍼티 값 추출&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; todos = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;HTML&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;completed&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;CSS&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;completed&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;#x27;Javascript&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;attr&quot;&gt;completed&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//   function getValues(key) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//     let array = [...todos];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//     let answer = []&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//         for (let i = 0; i &amp;lt; array.length; i++)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//             answer.push(array[i][key]);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//         &amp;#125; ;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//     return answer;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//   &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getValues&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;key&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; todos.map(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;todo&lt;/span&gt;=&amp;gt;&lt;/span&gt;todo[key])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(getValues(&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;)); &lt;span class=&quot;comment&quot;&gt;// [3, 2, 1]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(getValues(&lt;span class=&quot;string&quot;&gt;&amp;#x27;content&amp;#x27;&lt;/span&gt;)); &lt;span class=&quot;comment&quot;&gt;// [&amp;#x27;HTML&amp;#x27;, &amp;#x27;CSS&amp;#x27;, &amp;#x27;Javascript&amp;#x27;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(getValues(&lt;span class=&quot;string&quot;&gt;&amp;#x27;completed&amp;#x27;&lt;/span&gt;)); &lt;span class=&quot;comment&quot;&gt;// [false, true, false]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-프로퍼티-정렬&quot;&gt;&lt;a href=&quot;#3-프로퍼티-정렬&quot; class=&quot;headerlink&quot; title=&quot;3. 프로퍼티 정렬&quot;&gt;&lt;/a&gt;3. 프로퍼티 정렬&lt;/h3&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h3 id="1-html-생성"><a href="#1-html-생성" class="headerlink" title="1. html 생성"></a>1. html 생성</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> todos = [</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">&#x27;HTML&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">&#x27;CSS&#x27;</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">&#x27;Javascript&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">  ];</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> html = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">  </span><br><span class="line">    todos.forEach(<span class="function"><span class="params">todo</span> =&gt;</span> &#123;</span><br><span class="line">        html += <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;li id=&quot;<span class="subst">$&#123;todo.id&#125;</span>&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;label&gt;&lt;input type=&quot;checkbox&quot; <span class="subst">$&#123;todo.completed ? <span class="string">&#x27;checked&#x27;</span> : <span class="string">&#x27;&#x27;</span>&#125;</span>&gt;<span class="subst">$&#123;todo.content&#125;</span>&lt;/label&gt;</span></span><br><span class="line"><span class="string">        &lt;/li&gt;`</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    );</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> html;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">console</span>.log(render());</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  &lt;li id=&quot;3&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;label&gt;&lt;input type=&quot;checkbox&quot;&gt;HTML&lt;/label&gt;</span></span><br><span class="line"><span class="comment">  &lt;/li&gt;</span></span><br><span class="line"><span class="comment">  &lt;li id=&quot;2&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;label&gt;&lt;input type=&quot;checkbox&quot; checked&gt;CSS&lt;/label&gt;</span></span><br><span class="line"><span class="comment">  &lt;/li&gt;</span></span><br><span class="line"><span class="comment">  &lt;li id=&quot;1&quot;&gt;</span></span><br><span class="line"><span class="comment">    &lt;label&gt;&lt;input type=&quot;checkbox&quot;&gt;Javascript&lt;/label&gt;</span></span><br><span class="line"><span class="comment">  &lt;/li&gt;</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure><h3 id="2-특정-프로퍼티-값-추출"><a href="#2-특정-프로퍼티-값-추출" class="headerlink" title="2. 특정 프로퍼티 값 추출"></a>2. 특정 프로퍼티 값 추출</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> todos = [</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">&#x27;HTML&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">&#x27;CSS&#x27;</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">&#x27;Javascript&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">  ];</span><br><span class="line">  </span><br><span class="line"><span class="comment">//   function getValues(key) &#123;</span></span><br><span class="line"><span class="comment">//     let array = [...todos];</span></span><br><span class="line"><span class="comment">//     let answer = []</span></span><br><span class="line"><span class="comment">//         for (let i = 0; i &lt; array.length; i++)&#123;</span></span><br><span class="line"><span class="comment">//             answer.push(array[i][key]);</span></span><br><span class="line"><span class="comment">//         &#125; ;</span></span><br><span class="line"><span class="comment">//     return answer;</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getValues</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> todos.map(<span class="function"><span class="params">todo</span>=&gt;</span>todo[key])</span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(getValues(<span class="string">&#x27;id&#x27;</span>)); <span class="comment">// [3, 2, 1]</span></span><br><span class="line">  <span class="built_in">console</span>.log(getValues(<span class="string">&#x27;content&#x27;</span>)); <span class="comment">// [&#x27;HTML&#x27;, &#x27;CSS&#x27;, &#x27;Javascript&#x27;]</span></span><br><span class="line">  <span class="built_in">console</span>.log(getValues(<span class="string">&#x27;completed&#x27;</span>)); <span class="comment">// [false, true, false]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-프로퍼티-정렬"><a href="#3-프로퍼티-정렬" class="headerlink" title="3. 프로퍼티 정렬"></a>3. 프로퍼티 정렬</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> todos = [</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">&#x27;HTML&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">&#x27;CSS&#x27;</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">&#x27;Javascript&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">  ];</span><br><span class="line">  </span><br><span class="line"><span class="keyword">const</span> newTodos = [...todos]</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sortBy</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> newTodos.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> (a[key] &gt; b[key] ? <span class="number">1</span> : (a[key] &lt; b[key] ? -<span class="number">1</span> : <span class="number">0</span>)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">console</span>.log(sortBy(<span class="string">&#x27;id&#x27;</span>));</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  [</span></span><br><span class="line"><span class="comment">    &#123; id: 1, content: &#x27;Javascript&#x27;, completed: false &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 2, content: &#x27;CSS&#x27;, completed: true &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 3, content: &#x27;HTML&#x27;, completed: false &#125;</span></span><br><span class="line"><span class="comment">  ]</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="built_in">console</span>.log(sortBy(<span class="string">&#x27;content&#x27;</span>));</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  [</span></span><br><span class="line"><span class="comment">    &#123; id: 2, content: &#x27;CSS&#x27;, completed: true &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 3, content: &#x27;HTML&#x27;, completed: false &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 1, content: &#x27;Javascript&#x27;, completed: false &#125;</span></span><br><span class="line"><span class="comment">  ]</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="built_in">console</span>.log(sortBy(<span class="string">&#x27;completed&#x27;</span>));</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  [</span></span><br><span class="line"><span class="comment">    &#123; id: 3, content: &#x27;HTML&#x27;, completed: false &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 1, content: &#x27;Javascript&#x27;, completed: false &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 2, content: &#x27;CSS&#x27;, completed: true &#125;</span></span><br><span class="line"><span class="comment">  ]</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure><h3 id="4-새로운-요소-추가"><a href="#4-새로운-요소-추가" class="headerlink" title="4. 새로운 요소 추가"></a>4. 새로운 요소 추가</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> todos = [</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">&#x27;HTML&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">&#x27;CSS&#x27;</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">&#x27;Javascript&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">  ];</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">addTodo</span>(<span class="params">newTodo</span>) </span>&#123;</span><br><span class="line">    todos = [ newTodo, ...todos];</span><br><span class="line">    <span class="keyword">return</span> todos;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  addTodo(&#123; <span class="attr">id</span>: <span class="number">4</span>, <span class="attr">content</span>: <span class="string">&#x27;Test&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;);</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">console</span>.log(todos);</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  [</span></span><br><span class="line"><span class="comment">    &#123; id: 4, content: &#x27;Test&#x27;, completed: false &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 3, content: &#x27;HTML&#x27;, completed: false &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 2, content: &#x27;CSS&#x27;, completed: true &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 1, content: &#x27;Javascript&#x27;, completed: false &#125;</span></span><br><span class="line"><span class="comment">  ]</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure><h3 id="5-특정-요소-삭제"><a href="#5-특정-요소-삭제" class="headerlink" title="5. 특정 요소 삭제"></a>5. 특정 요소 삭제</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> todos = [</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">&#x27;HTML&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">&#x27;CSS&#x27;</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">&#x27;Javascript&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">  ];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">removeTodo</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">    todos = todos.filter(<span class="function"><span class="params">todo</span> =&gt;</span> todo.id !== key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  removeTodo(<span class="number">2</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">console</span>.log(todos);</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  [</span></span><br><span class="line"><span class="comment">    &#123; id: 3, content: &#x27;HTML&#x27;, completed: false &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 1, content: &#x27;Javascript&#x27;, completed: false &#125;</span></span><br><span class="line"><span class="comment">  ]</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure><h3 id="6-특정-요소의-프로퍼티-값-반전"><a href="#6-특정-요소의-프로퍼티-값-반전" class="headerlink" title="6. 특정 요소의 프로퍼티 값 반전"></a>6. 특정 요소의 프로퍼티 값 반전</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> todos = [</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">&#x27;HTML&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">&#x27;CSS&#x27;</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">&#x27;Javascript&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">  ];</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">toggleCompletedById</span>(<span class="params">key</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> newTodos = todos.filter(<span class="function"><span class="params">todo</span> =&gt;</span> todo.id === key)</span><br><span class="line">    newTodos[<span class="number">0</span>].completed = !newTodos[<span class="number">0</span>].completed</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  toggleCompletedById(<span class="number">1</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">console</span>.log(todos);</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  [</span></span><br><span class="line"><span class="comment">    &#123; id: 3, content: &#x27;HTML&#x27;, completed: false &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 2, content: &#x27;CSS&#x27;, completed: false &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 1, content: &#x27;Javascript&#x27;, completed: false &#125;</span></span><br><span class="line"><span class="comment">  ]</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure><h3 id="7-모든-요소의-completed-프로퍼티-값을-true로-설정"><a href="#7-모든-요소의-completed-프로퍼티-값을-true로-설정" class="headerlink" title="7. 모든 요소의 completed 프로퍼티 값을 true로 설정"></a>7. 모든 요소의 completed 프로퍼티 값을 true로 설정</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> todos = [</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">&#x27;HTML&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">&#x27;CSS&#x27;</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">&#x27;Javascript&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">  ];</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">toggleCompletedAll</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> todos.map(<span class="function"><span class="params">todo</span> =&gt;</span> (todo.completed = <span class="literal">true</span>))</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  toggleCompletedAll();</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">console</span>.log(todos);</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  [</span></span><br><span class="line"><span class="comment">    &#123; id: 3, content: &#x27;HTML&#x27;, completed: true &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 2, content: &#x27;CSS&#x27;, completed: true &#125;,</span></span><br><span class="line"><span class="comment">    &#123; id: 1, content: &#x27;Javascript&#x27;, completed: true &#125;</span></span><br><span class="line"><span class="comment">  ]</span></span><br><span class="line"><span class="comment">  */</span></span><br></pre></td></tr></table></figure><h3 id="8-completed-프로퍼티의-값이-true인-요소의-갯수-구하기"><a href="#8-completed-프로퍼티의-값이-true인-요소의-갯수-구하기" class="headerlink" title="8. completed 프로퍼티의 값이 true인 요소의 갯수 구하기"></a>8. completed 프로퍼티의 값이 true인 요소의 갯수 구하기</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> todos = [</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">&#x27;HTML&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">&#x27;CSS&#x27;</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">&#x27;Javascript&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">  ];</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">countCompletedTodos</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> todos.filter(<span class="function"><span class="params">todo</span> =&gt;</span> todo.completed).length;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">console</span>.log(countCompletedTodos()); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><h3 id="9-id-프로퍼티의-값-중에서-최대값-구하기"><a href="#9-id-프로퍼티의-값-중에서-최대값-구하기" class="headerlink" title="9. id 프로퍼티의 값 중에서 최대값 구하기"></a>9. id 프로퍼티의 값 중에서 최대값 구하기</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> todos = [</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">content</span>: <span class="string">&#x27;HTML&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">content</span>: <span class="string">&#x27;CSS&#x27;</span>, <span class="attr">completed</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">content</span>: <span class="string">&#x27;Javascript&#x27;</span>, <span class="attr">completed</span>: <span class="literal">false</span> &#125;</span><br><span class="line">  ];</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getMaxId</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> aaa = todos.map(<span class="function"><span class="params">todo</span>=&gt;</span>todo[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.max(...aaa);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">console</span>.log(getMaxId()); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/JS/">JS</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/22/20210322-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210321 TIL</title>
      <link>https://juhyeong-k.github.io/2021/03/21/20210321-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/21/20210321-TIL/</guid>
      <pubDate>Sun, 21 Mar 2021 10:34:39 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;29-Math&quot;&gt;&lt;a href=&quot;#29-Math&quot; class=&quot;headerlink&quot; title=&quot;29. Math&quot;&gt;&lt;/a&gt;29. Math&lt;/h1&gt;&lt;p&gt;표준 빌트인 객체 Math는 생성자 함수가 아니기 때문에 정적 프로퍼티와 정적 메소드만</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="29-Math"><a href="#29-Math" class="headerlink" title="29. Math"></a>29. Math</h1><p>표준 빌트인 객체 Math는 생성자 함수가 아니기 때문에 정적 프로퍼티와 정적 메소드만 제공한다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 원주율 PI</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.PI); <span class="comment">// 3.141592653589793</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 절대값</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.abs(-<span class="number">1</span>)); <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.abs([])); <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.abs(<span class="literal">null</span>)); <span class="comment">// 0</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.abs(<span class="literal">undefined</span>)); <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.abs(&#123;&#125;)); <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.abs()); <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 반올림</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(-<span class="number">1.4</span>)); <span class="comment">// -1</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(<span class="number">1.6</span>)); <span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.round()); <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 올림</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil(-<span class="number">1.1</span>)); <span class="comment">// -1</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil(-<span class="number">4.8</span>)); <span class="comment">// -4</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil(<span class="number">4.3</span>)); <span class="comment">// 5</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil()); <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 내림</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(-<span class="number">1.1</span>)); <span class="comment">// -2</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(-<span class="number">4.8</span>)); <span class="comment">// -5</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(<span class="number">4.7</span>)); <span class="comment">// 4</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil()); <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 0부터 1미만의 실수 random</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.random()); <span class="comment">// 0.5782056303358767</span></span><br><span class="line"><span class="comment">// 1부터 100 까지 랜덤 정수 출력</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">100</span>) + <span class="number">1</span>); <span class="comment">// 39</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 거듭제곱</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.pow(<span class="number">2</span>, <span class="number">4</span>)); <span class="comment">// 2 ** 4 -&gt; 16</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.pow(<span class="number">2</span>, -<span class="number">1</span>)); <span class="comment">// 2 ** -1 -&gt; 0.5</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.pow(<span class="number">2</span>)); <span class="comment">// NaN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// max 전달받은 인수 중 가장 큰 수 반환</span></span><br><span class="line"><span class="comment">// 숫자로 암묵적 타입 변환</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.max(<span class="number">3</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="string">&#x27;21&#x27;</span>, <span class="number">11</span>)); <span class="comment">// 21</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.max(<span class="number">1</span>)); <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.max()); <span class="comment">// -Infinity</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.max(...[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>])); <span class="comment">// 스프레드 문법 -&gt; 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// min 전달받은 인수 중 가장 작은 수 반환</span></span><br><span class="line"><span class="comment">// 숫자로 암묵적 타입 변환</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.min(<span class="number">3</span>, <span class="string">&#x27;1&#x27;</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">21</span>, <span class="number">11</span>)); <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.min()); <span class="comment">// Infinity</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.min(...[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>])); <span class="comment">// 스프레드 문법 -&gt; 1</span></span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/JS/">JS</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/21/20210321-TIL/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
