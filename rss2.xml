<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JH&#39;s dev blog</title>
    <link>https://juhyeong-k.github.io/</link>
    
    <atom:link href="https://juhyeong-k.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>All about dev</description>
    <pubDate>Tue, 27 Apr 2021 09:22:53 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>[2021 캐치#개발자 커리어콘] 개발자의 역량 키우기</title>
      <link>https://juhyeong-k.github.io/2021/04/27/%EC%BA%90%EC%B9%98-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9D%98-%EC%97%AD%EB%9F%89-%ED%82%A4%EC%9A%B0%EA%B8%B0/</link>
      <guid>https://juhyeong-k.github.io/2021/04/27/%EC%BA%90%EC%B9%98-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9D%98-%EC%97%AD%EB%9F%89-%ED%82%A4%EC%9A%B0%EA%B8%B0/</guid>
      <pubDate>Tue, 27 Apr 2021 08:24:24 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;엔지니어로서-성장을-이끌어준-순간들&quot;&gt;&lt;a href=&quot;#엔지니어로서-성장을-이끌어준-순간들&quot; class=&quot;headerlink&quot; title=&quot;엔지니어로서 성장을 이끌어준 순간들&quot;&gt;&lt;/a&gt;엔지니어로서 성장을 이끌어준 순간들&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;당근마켓 데브옵스 엔지니어 강진우님&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;첫번째-순간-커널-스터디&quot;&gt;&lt;a href=&quot;#첫번째-순간-커널-스터디&quot; class=&quot;headerlink&quot; title=&quot;첫번째 순간 - 커널 스터디&quot;&gt;&lt;/a&gt;첫번째 순간 - 커널 스터디&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;기술을 용도에 맞게 활용하기 위해서는 &lt;strong&gt;내부 구조에 대한 이해&lt;/strong&gt;가 필요하다&lt;/li&gt;
&lt;li&gt;기술을 접할 때 가장 먼저 보는 것은 공식 문서와 아키텍처 다이어그램&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;두번째-순간-글쓰기&quot;&gt;&lt;a href=&quot;#두번째-순간-글쓰기&quot; class=&quot;headerlink&quot; title=&quot;두번째 순간 - 글쓰기&quot;&gt;&lt;/a&gt;두번째 순간 - 글쓰기&lt;/h2&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="엔지니어로서-성장을-이끌어준-순간들"><a href="#엔지니어로서-성장을-이끌어준-순간들" class="headerlink" title="엔지니어로서 성장을 이끌어준 순간들"></a>엔지니어로서 성장을 이끌어준 순간들</h1><blockquote><p>당근마켓 데브옵스 엔지니어 강진우님</p></blockquote><h2 id="첫번째-순간-커널-스터디"><a href="#첫번째-순간-커널-스터디" class="headerlink" title="첫번째 순간 - 커널 스터디"></a>첫번째 순간 - 커널 스터디</h2><ul><li>기술을 용도에 맞게 활용하기 위해서는 <strong>내부 구조에 대한 이해</strong>가 필요하다</li><li>기술을 접할 때 가장 먼저 보는 것은 공식 문서와 아키텍처 다이어그램</li></ul><h2 id="두번째-순간-글쓰기"><a href="#두번째-순간-글쓰기" class="headerlink" title="두번째 순간 - 글쓰기"></a>두번째 순간 - 글쓰기</h2><ul><li>지식을 정리하고 나누고 싶은 생각이 듦</li><li>작성한 글을 페이스북에 공유하면서 집필 의뢰가 들어옴(<a href="http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&ejkGb=KOR&barcode=9788966264049">리눅스커널이야기</a>)</li><li>글을 쓰면서 생각이 정리되고 이를 통해 성장할 수 있다</li><li>글쓰기 시작은 너무 어렵다고 생각할 수 있지만 어떤 것이든 좋으니 일단 시작하는게 중요</li><li>아무것도 아니라고 생각한 그 지식이 누군가에게 꼭 필요한 것일지도 모른다</li></ul><h2 id="세번째-순간-컴포트-존-Comport-Zone"><a href="#세번째-순간-컴포트-존-Comport-Zone" class="headerlink" title="세번째 순간 - 컴포트 존(Comport Zone)"></a>세번째 순간 - 컴포트 존(Comport Zone)</h2><ul><li>바닷가재가 성장하는 법 =&gt; 껍질을 버리고 새로운 껍질을 만들어 낸다</li><li>업무의 영역을 넓혀 보거나 주어진 환경을 새롭게 바꿔보면서 컴포트 존을 벗어나야 함</li></ul><h2 id="키워드-정리"><a href="#키워드-정리" class="headerlink" title="키워드 정리"></a>키워드 정리</h2><ul><li>스터디 - 내부 구조에 대한 이해는 성장의 바탕</li><li>글쓰기 - 무엇이 되었든 일단 글을 써 보기</li><li>컴포트 존 - 새로운 것을 추구하려는 노력</li></ul><h2 id="기타"><a href="#기타" class="headerlink" title="기타"></a>기타</h2><ul><li><p>내가 하고싶은 것을 잘 찾아내는 게 중요하다. 굉장히 어렵지만, 많은 것을 해보면서 하고 싶은 것들이 바뀔 수도 있다. 지금까지 해온 게 아까울 수 있지만, 이런 시행착오도 성장이다. 하고 싶었던 것을 끝까지 노력해보고 안되면 다른 것들 해보는 게 좋다.</p></li><li><p>이것 저것 해보다가 제대로 할 줄 아는게 없는 개발자가 되지는 않을까?<br>언제나 완벽한 선택을 할 수는 없다. 커리어가 꼬이는 게 걱정일 수 있지만 멀리본다면, 이것저것 해봤던 것들이 어떤 형태로든 자산이 되어 돌아온다. 다만, 내가 답을 찾을 수 있을 거라는 스스로에 대한 믿음을 가지고 있어야 한다. 출발은 늦을 수 있지만 더 멀리 갈 수 있는 기회가 된다.</p></li><li><p>개발을 공부하는 노하우<br>일단 해보는 것이 중요하다. 사람마다 스타일이 다를 수 있지만, 일단 돌아가는 소스코드를 만들어내고 시행착오를 겪어보고, 책이나 문서들을 통해 해결한 내용들을 글로 잘 정리해두면 성장하는데 큰 도움이 될 수 있다.</p></li></ul><h2 id="느낀점"><a href="#느낀점" class="headerlink" title="느낀점"></a>느낀점</h2><ul><li>요즘 블로그에 글을 쓰는 일이 줄었는데, 이번 강의를 통해 글을 꾸준히 작성해나가야겠다고 느꼈다.</li><li>내 스스로에게 무엇을 하고 싶은지 나에 대해 생각해보는 시간을 가져야겠다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/Review/">Review</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/2021-%EC%BA%90%EC%B9%98-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%BB%A4%EB%A6%AC%EC%96%B4%EC%BD%98/">2021 캐치 개발자 커리어콘</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/27/%EC%BA%90%EC%B9%98-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9D%98-%EC%97%AD%EB%9F%89-%ED%82%A4%EC%9A%B0%EA%B8%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>ESlint와 Prettier 설치 및 설정</title>
      <link>https://juhyeong-k.github.io/2021/04/19/ESlint%EC%99%80-Prettier-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%A4%EC%A0%95/</link>
      <guid>https://juhyeong-k.github.io/2021/04/19/ESlint%EC%99%80-Prettier-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%A4%EC%A0%95/</guid>
      <pubDate>Mon, 19 Apr 2021 05:27:29 GMT</pubDate>
      
      <description>&lt;p&gt;토이 프로젝트를 진행하면서, 사람마다 다른 코드 스타일을 가지고 있어서 일관되지 않은 코드 스타일을 보면서 불편함을 겪었다. &lt;code&gt;linter&lt;/code&gt;없이 코딩을 하다보니 문법적 오류를 한 눈에 파악하기 힘들어서 불편했던 경험도 있다. 그래서 이번 기회에 &lt;code&gt;ESlint&lt;/code&gt;와 &lt;code&gt;Prettier&lt;/code&gt;를 사용해보려고 한다.&lt;/p&gt;
&lt;h2 id=&quot;ESlint&quot;&gt;&lt;a href=&quot;#ESlint&quot; class=&quot;headerlink&quot; title=&quot;ESlint&quot;&gt;&lt;/a&gt;ESlint&lt;/h2&gt;&lt;p&gt;&lt;code&gt;linter&lt;/code&gt; 혹은 &lt;code&gt;lint&lt;/code&gt;는 소스 코드를 분석해서 문법 오류 및 버그를 찾아서 보고해주는 도구를 말한다. 자바스크립트에서 사용할 수 있는 &lt;code&gt;linter&lt;/code&gt;는 &lt;code&gt;JS Lint&lt;/code&gt;, &lt;code&gt;JS Hint&lt;/code&gt;, &lt;code&gt;ESlint&lt;/code&gt; 등이 있는데, 그 중에서 가장 많은 사용자가 이용하는 것이 &lt;code&gt;ESlint&lt;/code&gt;다.&lt;/p&gt;
&lt;h2 id=&quot;Prettier&quot;&gt;&lt;a href=&quot;#Prettier&quot; class=&quot;headerlink&quot; title=&quot;Prettier&quot;&gt;&lt;/a&gt;Prettier&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Prettier&lt;/code&gt;는 코드에 적용된 스타일들을 무시하고, 줄 길이를 고려해서 정해진 &lt;code&gt;Prettier&lt;/code&gt;의 규칙대로 다시 작성해서 보여준다. 강제된 코드 스타일로 작성되기 때문에 일관된 코드 스타일을 가질 수 있다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>토이 프로젝트를 진행하면서, 사람마다 다른 코드 스타일을 가지고 있어서 일관되지 않은 코드 스타일을 보면서 불편함을 겪었다. <code>linter</code>없이 코딩을 하다보니 문법적 오류를 한 눈에 파악하기 힘들어서 불편했던 경험도 있다. 그래서 이번 기회에 <code>ESlint</code>와 <code>Prettier</code>를 사용해보려고 한다.</p><h2 id="ESlint"><a href="#ESlint" class="headerlink" title="ESlint"></a>ESlint</h2><p><code>linter</code> 혹은 <code>lint</code>는 소스 코드를 분석해서 문법 오류 및 버그를 찾아서 보고해주는 도구를 말한다. 자바스크립트에서 사용할 수 있는 <code>linter</code>는 <code>JS Lint</code>, <code>JS Hint</code>, <code>ESlint</code> 등이 있는데, 그 중에서 가장 많은 사용자가 이용하는 것이 <code>ESlint</code>다.</p><h2 id="Prettier"><a href="#Prettier" class="headerlink" title="Prettier"></a>Prettier</h2><p><code>Prettier</code>는 코드에 적용된 스타일들을 무시하고, 줄 길이를 고려해서 정해진 <code>Prettier</code>의 규칙대로 다시 작성해서 보여준다. 강제된 코드 스타일로 작성되기 때문에 일관된 코드 스타일을 가질 수 있다.</p><h2 id="설치"><a href="#설치" class="headerlink" title="설치"></a>설치</h2><p>VS Code에서 사용하기 위해서는 VScode Extension에서 <code>ESlint</code>, <code>Prettier</code>를 설치하는 것 뿐만 아니라, Node.js 모듈로도 설치해야 한다. VScode Extension에서 설치하는 건 Node.js로 설치한 <code>ESlint</code>와 <code>Prettier</code>를 연동하기 위해 설치하는 것이다.</p><p>전역이 아닌 로컬 설치를 권장하고 있다. 적용할 프로젝트 폴더에서 <code>npm init</code>으로 <code>package.json</code>을 만들어주자.</p><p>그 후 아래 명령어로 <code>ESlint</code>를 설치해주고, <code>--save-dev</code>로 <code>package.json</code>에 <code>devDependencies</code>안에 기록한다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install eslint --save-dev</span><br></pre></td></tr></table></figure><p><code>--save</code> 명령 없이 설치해도 <code>package.json</code>안에 <code>Dependencies</code>로 기록되지만 <code>devDependencies</code>는 <code>--save-dev</code>로 기록해줘야 한다.</p><p><code>Prettier</code>도 같이 설치한다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install prettier --save-dev --save-exact</span><br></pre></td></tr></table></figure><p><code>npm</code>은 <code>semantic versioning(유의적 버전)</code>을 지원해서 <code>~(틸트)</code>와 <code>^(캐럿)</code>등 범위 내에서 업데이트를 하지만, <code>--save-exact</code> 옵션을 지정하면 설치된 버전을 범위 지정 없이 기록한다. <code>Prettier</code>에서는 버전이 달라지면서 생길 스타일 변화를 막기 위해서 이 옵션을 권장한다고 한다.</p><p><code>ESlint</code>와 <code>Prettier</code>를 같이 사용하기 위해서는 아래의 모듈을 추가로 설치해야 한다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install eslint-plugin-prettier eslint-config-prettier --save-dev</span><br></pre></td></tr></table></figure><ul><li><p><code>eslint-config-prettier</code> - <code>ESlint</code> 설정 중 <code>Prettier</code>와 충돌하는 부분을 비활성화 한다. <code>ESlint</code>버전이 <code>7.0</code>이상이 아니라면 에러가 발생해서 설치되지 않기 때문에 최신 버전의 <code>ESlint</code>로 설치해야 한다.<br><a href="https://github.com/prettier/eslint-config-prettier">https://github.com/prettier/eslint-config-prettier</a></p></li><li><p><code>eslint-plugin-prettier</code> - <code>Prettier</code>를 <code>ESlint</code>플러그인으로 추가한다. 이를 통해 <code>Prettier</code>에서 인식하는 에러를 <code>ESlint</code> 에러로 출력한다.<br><a href="https://github.com/prettier/eslint-plugin-prettier">https://github.com/prettier/eslint-plugin-prettier</a></p></li></ul><p>프로젝트 폴더 최상위 위치에 <code>.eslintrc.json</code>을 만들고 안에 내용을 추가한다.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;plugins&quot;</span>: [<span class="string">&quot;prettier&quot;</span>],</span><br><span class="line">    <span class="attr">&quot;extends&quot;</span>: [<span class="string">&quot;eslint:recommended&quot;</span>, <span class="string">&quot;plugin:prettier/recommended&quot;</span>],</span><br><span class="line">    <span class="attr">&quot;rules&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;prettier/prettier&quot;</span>: <span class="string">&quot;error&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>이제 VScode Extensions에서 <code>ESlint</code>와 <code>Prettier</code>를 설치 후 <code>settings.json</code>에서 아래 내용을 추가한다.</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Set the default</span></span><br><span class="line">&quot;editor.formatOnSave&quot;: false,</span><br><span class="line"><span class="comment">// Enable per-language</span></span><br><span class="line">&quot;[javascript]&quot;: &#123;</span><br><span class="line">    &quot;editor.formatOnSave&quot;: true</span><br><span class="line">&#125;,</span><br><span class="line">&quot;editor.codeActionsOnSave&quot;: &#123;</span><br><span class="line">    <span class="comment">// For ESLint</span></span><br><span class="line">    &quot;source.fixAll.eslint&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>이대로 사용해도 되지만, <code>ESlint</code>의 많은 규칙 중 가장 많이 사용되고 있는 <code>airbnb</code>에서 정의한 자바스크립트 규칙을 사용하려고 한다.</p><ul><li><code>eslint-config-airbnb</code> - <code>React</code>관련 규칙 포함</li><li><code>eslint-config-airbnb-base</code> - <code>React</code>관련 규칙 포함x</li></ul><p>아직 <code>eslint-config-airbnb</code>를 설치하려면 여러 의존성 패키지를 설치해야 하기 때문에 <code>React</code>를 사용하지 않는다면 <code>eslint-config-airbnb-base</code>를 설치하면 된다.</p><p><a href="https://www.npmjs.com/package/eslint-config-airbnb">https://www.npmjs.com/package/eslint-config-airbnb</a></p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ npm info <span class="string">&quot;eslint-config-airbnb@latest&quot;</span> peerDependencies</span><br><span class="line"> </span><br><span class="line">&#123;</span><br><span class="line">  eslint: <span class="string">&#x27;^5.16.0 || ^6.8.0 || ^7.2.0&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;eslint-plugin-import&#x27;</span>: <span class="string">&#x27;^2.22.1&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;eslint-plugin-jsx-a11y&#x27;</span>: <span class="string">&#x27;^6.4.1&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;eslint-plugin-react&#x27;</span>: <span class="string">&#x27;^7.21.5&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;eslint-plugin-react-hooks&#x27;</span>: <span class="string">&#x27;^4 || ^3 || ^2.3.0 || ^1.7.0&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.npmjs.com/package/eslint-config-airbnb-base">https://www.npmjs.com/package/eslint-config-airbnb-base</a></p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ npm info <span class="string">&quot;eslint-config-airbnb-base@latest&quot;</span> peerDependencies</span><br><span class="line"> </span><br><span class="line">&#123;</span><br><span class="line">  eslint: <span class="string">&#x27;^5.16.0 || ^6.8.0 || ^7.2.0&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;eslint-plugin-import&#x27;</span>: <span class="string">&#x27;^2.22.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>eslint-plugin-import</code>와 <code>eslint-config-airbnb-base</code>를 같이 설치한다.</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install eslint-plugin-import eslint-config-airbnb-base --save-dev</span><br></pre></td></tr></table></figure><p>설치 후 <code>.eslintrc.json</code>의 <code>&quot;extends&quot;</code>에 <code>&quot;eslint:recommended&quot;</code>대신 <code>&quot;airbnb-base&quot;</code>를 넣어주면 된다.</p><p><code>.eslintrc.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;parserOptions&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;ecmaVersion&quot;</span>: <span class="number">11</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;env&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;browser&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">&quot;node&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;globals&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;_&quot;</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;plugins&quot;</span>: [<span class="string">&quot;import&quot;</span>, <span class="string">&quot;prettier&quot;</span>],</span><br><span class="line">    <span class="attr">&quot;extends&quot;</span>: [<span class="string">&quot;airbnb-base&quot;</span>, <span class="string">&quot;prettier&quot;</span>],</span><br><span class="line">    <span class="attr">&quot;rules&quot;</span>: &#123;</span><br><span class="line">      <span class="comment">// &quot;off&quot; or 0 - turn the rule off</span></span><br><span class="line">      <span class="comment">// &quot;warn&quot; or 1 - turn the rule on as a warning (doesn’t affect exit code)</span></span><br><span class="line">      <span class="comment">// &quot;error&quot; or 2 - turn the rule on as an error (exit code is 1 when triggered)</span></span><br><span class="line">      <span class="comment">// &quot;no-var&quot;: &quot;off&quot;,</span></span><br><span class="line">      <span class="attr">&quot;no-console&quot;</span>: <span class="string">&quot;warn&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;no-plusplus&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;no-shadow&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;vars-on-top&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;no-underscore-dangle&quot;</span>: <span class="string">&quot;off&quot;</span>, <span class="comment">// var _foo;</span></span><br><span class="line">      <span class="attr">&quot;comma-dangle&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;func-names&quot;</span>: <span class="string">&quot;off&quot;</span>, <span class="comment">// setTimeout(function () &#123;&#125;, 0);</span></span><br><span class="line">      <span class="attr">&quot;prefer-template&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;no-nested-ternary&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;max-classes-per-file&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;consistent-return&quot;</span>: <span class="string">&quot;off&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;no-restricted-syntax&quot;</span>: [<span class="string">&quot;off&quot;</span>, <span class="string">&quot;ForOfStatement&quot;</span>], <span class="comment">// disallow specified syntax(ex. WithStatement)</span></span><br><span class="line">      <span class="attr">&quot;prefer-arrow-callback&quot;</span>: <span class="string">&quot;error&quot;</span>, <span class="comment">// Require using arrow functions for callbacks</span></span><br><span class="line">      <span class="attr">&quot;require-await&quot;</span>: <span class="string">&quot;error&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;arrow-parens&quot;</span>: [<span class="string">&quot;error&quot;</span>, <span class="string">&quot;as-needed&quot;</span>], <span class="comment">// a =&gt; &#123;&#125;</span></span><br><span class="line">      <span class="attr">&quot;no-param-reassign&quot;</span>: [<span class="string">&quot;error&quot;</span>, &#123; <span class="attr">&quot;props&quot;</span>: <span class="literal">false</span> &#125;],</span><br><span class="line">      <span class="attr">&quot;no-unused-expressions&quot;</span>: [<span class="string">&quot;error&quot;</span>, &#123;</span><br><span class="line">        <span class="attr">&quot;allowTernary&quot;</span>: <span class="literal">true</span>,      <span class="comment">// a || b</span></span><br><span class="line">        <span class="attr">&quot;allowShortCircuit&quot;</span>: <span class="literal">true</span>, <span class="comment">// a ? b : 0</span></span><br><span class="line">        <span class="attr">&quot;allowTaggedTemplates&quot;</span>: <span class="literal">true</span></span><br><span class="line">      &#125;],</span><br><span class="line">      <span class="attr">&quot;import/no-extraneous-dependencies&quot;</span>: [<span class="string">&quot;error&quot;</span>, &#123; <span class="attr">&quot;devDependencies&quot;</span>: <span class="literal">true</span> &#125;],</span><br><span class="line">      <span class="attr">&quot;max-len&quot;</span>: [<span class="string">&quot;error&quot;</span>, &#123;</span><br><span class="line">        <span class="attr">&quot;code&quot;</span>: <span class="number">110</span>,</span><br><span class="line">        <span class="attr">&quot;ignoreComments&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;ignoreStrings&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;ignoreTemplateLiterals&quot;</span>: <span class="literal">true</span></span><br><span class="line">      &#125;] <span class="comment">// prettier의 printWidth 옵션 대신 사용</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><code>.prettierrc</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;tabWidth&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">&quot;singleQuote&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;trailingComma&quot;</span>: <span class="string">&quot;none&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;bracketSpacing&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;semi&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;useTabs&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">&quot;arrowParens&quot;</span>: <span class="string">&quot;avoid&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;endOfLine&quot;</span>: <span class="string">&quot;lf&quot;</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://jbee.io/web/formatting-code-automatically/">https://jbee.io/web/formatting-code-automatically/</a><br><a href="https://velog.io/@velopert/eslint-and-prettier-in-react">https://velog.io/@velopert/eslint-and-prettier-in-react</a><br><a href="https://feynubrick.github.io/2019/05/20/eslint-prettier.html">https://feynubrick.github.io/2019/05/20/eslint-prettier.html</a><br><a href="https://eslint.org/docs/user-guide/getting-started">https://eslint.org/docs/user-guide/getting-started</a><br><a href="https://pravusid.kr/javascript/2019/03/10/eslint-prettier.html">https://pravusid.kr/javascript/2019/03/10/eslint-prettier.html</a><br><a href="https://prettier.io/docs/en/integrating-with-linters.html">https://prettier.io/docs/en/integrating-with-linters.html</a><br><a href="https://poiemaweb.com/eslint">https://poiemaweb.com/eslint</a><br><a href="https://www.npmjs.com/package/eslint-config-airbnb">https://www.npmjs.com/package/eslint-config-airbnb</a><br><a href="https://www.npmjs.com/package/eslint-config-airbnb-base">https://www.npmjs.com/package/eslint-config-airbnb-base</a><br><a href="https://velog.io/@kyusung/eslint-config-2">ESlint 설정 살펴보기</a></p>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/JavsScript/">JavsScript</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/ESlint/">ESlint</category>
      
      <category domain="https://juhyeong-k.github.io/tags/Prettier/">Prettier</category>
      
      <category domain="https://juhyeong-k.github.io/tags/VScode/">VScode</category>
      
      <category domain="https://juhyeong-k.github.io/tags/JavaScript/">JavaScript</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/19/ESlint%EC%99%80-Prettier-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%A4%EC%A0%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210418 TIL ubuntu 블루투스 이어폰 마이크 문제</title>
      <link>https://juhyeong-k.github.io/2021/04/18/20210418-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/18/20210418-TIL/</guid>
      <pubDate>Sun, 18 Apr 2021 14:21:09 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;블루투스 이어폰의 마이크를 사용하려고 했는데, 시스템에서 잡히지 않는 문제가 발생했다.&lt;/p&gt;
&lt;p&gt;내 블루투스 이어폰은 &lt;code&gt;HFP&lt;/code&gt; 프로파일을 지원 하지만, 리눅스의 사운드 서버 프로그램인 &lt;code&gt;PulseAudio&lt;/co</description>
        
      
      
      
      <content:encoded><![CDATA[<p>블루투스 이어폰의 마이크를 사용하려고 했는데, 시스템에서 잡히지 않는 문제가 발생했다.</p><p>내 블루투스 이어폰은 <code>HFP</code> 프로파일을 지원 하지만, 리눅스의 사운드 서버 프로그램인 <code>PulseAudio</code>는 <code>HFP</code> 프로파일을 지원하지 않아서 생기는 문제라고 한다.</p><p>아래의 방법으로 해결을 했다.</p><p><a href="https://askubuntu.com/questions/831331/failed-to-change-profile-to-headset-head-unit">https://askubuntu.com/questions/831331/failed-to-change-profile-to-headset-head-unit</a></p>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/18/20210418-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210416 TIL</title>
      <link>https://juhyeong-k.github.io/2021/04/16/20210416-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/16/20210416-TIL/</guid>
      <pubDate>Fri, 16 Apr 2021 12:19:09 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;메모리, CPU에 대한 CS 공부&lt;/li&gt;
&lt;/ul&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>메모리, CPU에 대한 CS 공부</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/16/20210416-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210415 TIL</title>
      <link>https://juhyeong-k.github.io/2021/04/15/20210415-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/15/20210415-TIL/</guid>
      <pubDate>Thu, 15 Apr 2021 12:45:08 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;알고리즘 문제 풀이&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>알고리즘 문제 풀이</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">def solution(absolutes, signs):</span><br><span class="line">    number_zip = zip(absolutes, signs)</span><br><span class="line">    sum_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> number_zip:</span><br><span class="line">        <span class="keyword">if</span> i[<span class="number">1</span>]:</span><br><span class="line">            sum_list.append(i[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            sum_list.append(-i[<span class="number">0</span>])</span><br><span class="line">    answer = sum(sum_list)</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">def solution(s):</span><br><span class="line">    a = <span class="string">&#x27;()&#x27;</span></span><br><span class="line">    b = <span class="string">&#x27;&#123;&#125;&#x27;</span></span><br><span class="line">    c = <span class="string">&#x27;[]&#x27;</span></span><br><span class="line">    answer = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(s)):</span><br><span class="line">        abc_list = list(s)</span><br><span class="line">        asd = abc_list[<span class="number">1</span>:]</span><br><span class="line">        asd.append(abc_list[<span class="number">0</span>])</span><br><span class="line">        s = <span class="string">&quot;&quot;</span>.join(asd)</span><br><span class="line">        test = s</span><br><span class="line">        <span class="keyword">while</span> (a or b or c) <span class="keyword">in</span> test:</span><br><span class="line">            test = test.replace(a, <span class="string">&quot;&quot;</span>)</span><br><span class="line">            test = test.replace(b, <span class="string">&quot;&quot;</span>)</span><br><span class="line">            test = test.replace(c, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> test == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            answer += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/15/20210415-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210414 TIL 웹 스크래핑 연습</title>
      <link>https://juhyeong-k.github.io/2021/04/14/20210414-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/14/20210414-TIL/</guid>
      <pubDate>Wed, 14 Apr 2021 10:26:34 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;웹-스크래핑-연습&quot;&gt;&lt;a href=&quot;#웹-스크래핑-연습&quot; class=&quot;headerlink&quot; title=&quot;웹 스크래핑 연습&quot;&gt;&lt;/a&gt;웹 스크래핑 연습&lt;/h1&gt;&lt;p&gt;파이썬으로 네이버 영화 페이지의 영화 제목과 댓글을 스크래핑하는 연습을 해봤</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="웹-스크래핑-연습"><a href="#웹-스크래핑-연습" class="headerlink" title="웹 스크래핑 연습"></a>웹 스크래핑 연습</h1><p>파이썬으로 네이버 영화 페이지의 영화 제목과 댓글을 스크래핑하는 연습을 해봤다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_movie_title_code</span>():</span></span><br><span class="line">    url = <span class="string">&quot;https://movie.naver.com/movie/running/current.nhn&quot;</span></span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">    movie_titles = soup.select(<span class="string">&#x27;dt.tit &gt; a&#x27;</span>)</span><br><span class="line">    movie_data = []</span><br><span class="line">    <span class="keyword">for</span> movie_title <span class="keyword">in</span> movie_titles:</span><br><span class="line">        code = movie_title[<span class="string">&#x27;href&#x27;</span>].split(<span class="string">&#x27;?code=&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">        temp_data = &#123;</span><br><span class="line">            <span class="string">&quot;title&quot;</span> : movie_title.text,</span><br><span class="line">            <span class="string">&quot;code&quot;</span>: code</span><br><span class="line">            &#125;</span><br><span class="line">        movie_data.append(temp_data)</span><br><span class="line">    <span class="keyword">return</span> movie_data</span><br><span class="line"></span><br><span class="line">movie_data = get_movie_title_code()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i, movie <span class="keyword">in</span> <span class="built_in">enumerate</span>(movie_data):</span><br><span class="line">    reviews = &#123;</span><br><span class="line">    <span class="string">&#x27;comments&#x27;</span>: [],</span><br><span class="line">    <span class="string">&#x27;comments_score&#x27;</span>: []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>):</span><br><span class="line">        code = movie[<span class="string">&#x27;code&#x27;</span>]</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&#x27;authority&#x27;</span>: <span class="string">&#x27;movie.naver.com&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;upgrade-insecure-requests&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;accept&#x27;</span>: <span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;sec-fetch-site&#x27;</span>: <span class="string">&#x27;same-site&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;sec-fetch-mode&#x27;</span>: <span class="string">&#x27;navigate&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;sec-fetch-user&#x27;</span>: <span class="string">&#x27;?1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;sec-fetch-dest&#x27;</span>: <span class="string">&#x27;iframe&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;sec-ch-ua&#x27;</span>: <span class="string">&#x27;&quot;Google Chrome&quot;;v=&quot;89&quot;, &quot;Chromium&quot;;v=&quot;89&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;referer&#x27;</span>: <span class="string">&#x27;https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn?code=189075&amp;type=after&amp;isActualPointWriteExecute=false&amp;isMileageSubscriptionAlready=false&amp;isMileageSubscriptionReject=false&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;accept-language&#x27;</span>: <span class="string">&#x27;ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;NNB=YTCBYGMUQUEWA; NaverSuggestUse=use%26unuse; NRTK=ag#20s_gr#0_ma#-2_si#0_en#-2_sp#-1; NDARK=N; _ga=GA1.2.1348994037.1614128644; _fbp=fb.1.1614128644438.366270856; nid_inf=582830848; NID_AUT=hY1X3Qk08uR9PDC14aeJkrIcopkcM8VrKbtfjx6bvi1rYkgTCXbYIOzrhokFGRuP; NID_JKL=JsQBMvSsYARB0flcBSd6kMVKt0odB6z6lzJ9u66AQro=; nx_ssl=2; ASID=6af24fe600000178a56138b20000004c; notSupportBrowserAlert=true; NM_THUMB_PROMOTION_BLOCK=Y; NID_SES=AAABm6DyyHK3sTk/CK/r8+BSrwLBmcb/t2L/pm+rN/XTL9cl2v+YazQyslqIhEYV5GMvm+eR3sU4zZ8ZHCo/bnLfCiMmEKkzRa7QvIYsN/DdBtCx1K4KnbQdYdJC5Fh8K1Dhwg4+o4FTalxZlLRF0DghuKq2bK3z1BSOKrw7BvbA/jfwGWT4xvJMIFumoapPMDI92pRiX965ADziS96Qe0Fl/C/AH1MxEe/oUsMcPrzfkvMSfBN2mm6jJdGMCWiwWhVVkGvoZFThUNA0MolKGmZ9CwFx2eJ/2dUMe+4CxJAnFwybfE39ytbXfV3pKgvNwNjJ77O0nmgHIkA+GvA6yF3g10BDRpyHKv+ghXOWmXv0dFNBhlZI9w3jmXC3i+Bk74W6lzInzTMfD+UgToPaXgAvSa8tEeVqndg4CtangC//E8gCdBMA0zxdGTGLn4QJ3E257tor8N40NZpJX+umNjSK3reJvRTkYe5gPrVR3W2lhaGtaKHcMoA+BAyrEFkECSX6gBSn0w9lCAuNomKhuAQ4+7conWmQAWfcHhlarylC7NN3; csrf_token=96e54b3a-f4f7-449a-9e88-8be4d491fe00&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        params = (</span><br><span class="line">            (<span class="string">&#x27;code&#x27;</span>, code),</span><br><span class="line">            (<span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;after&#x27;</span>),</span><br><span class="line">            (<span class="string">&#x27;isActualPointWriteExecute&#x27;</span>, <span class="string">&#x27;false&#x27;</span>),</span><br><span class="line">            (<span class="string">&#x27;isMileageSubscriptionAlready&#x27;</span>, <span class="string">&#x27;false&#x27;</span>),</span><br><span class="line">            (<span class="string">&#x27;isMileageSubscriptionReject&#x27;</span>, <span class="string">&#x27;false&#x27;</span>),</span><br><span class="line">            (<span class="string">&#x27;page&#x27;</span>, index+<span class="number">1</span>),</span><br><span class="line">        )</span><br><span class="line">        response = requests.get(<span class="string">&#x27;https://movie.naver.com/movie/bi/mi/pointWriteFormList.nhn&#x27;</span>, headers=headers, params=params)</span><br><span class="line">        soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        movie_reviews = soup.select(<span class="string">&#x27;body &gt; div &gt; div &gt; div.score_result &gt; ul &gt; li&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> index, movie_review <span class="keyword">in</span> <span class="built_in">enumerate</span>(movie_reviews):</span><br><span class="line">            movie_score = movie_review.select_one(<span class="string">&#x27;div.star_score &gt; em&#x27;</span>).text</span><br><span class="line">            movie_comment_tag = movie_review.select_one(<span class="string">f&#x27;div.score_reple &gt; p &gt; #_filtered_ment_<span class="subst">&#123;index&#125;</span>&#x27;</span>)</span><br><span class="line">            movie_comment = movie_comment_tag.text.strip()</span><br><span class="line">            <span class="keyword">if</span> movie_comment_tag.select_one(<span class="string">&#x27;span &gt; a&#x27;</span>):</span><br><span class="line">                movie_comment = movie_comment_tag.select_one(<span class="string">&#x27;span &gt; a&#x27;</span>)[<span class="string">&#x27;data-src&#x27;</span>].strip()</span><br><span class="line">            reviews[<span class="string">&#x27;comments&#x27;</span>].append(movie_comment)</span><br><span class="line">            reviews[<span class="string">&#x27;comments_score&#x27;</span>].append(movie_score)</span><br><span class="line">    movie_data[i][<span class="string">&#x27;reviews&#x27;</span>] = reviews</span><br><span class="line"></span><br><span class="line">print(movie_data)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/14/20210414-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210413 TIL singly linked list 구현</title>
      <link>https://juhyeong-k.github.io/2021/04/13/20210413-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/13/20210413-TIL/</guid>
      <pubDate>Tue, 13 Apr 2021 02:27:49 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;singly-linked-list-구현&quot;&gt;&lt;a href=&quot;#singly-linked-list-구현&quot; class=&quot;headerlink&quot; title=&quot;singly linked list 구현&quot;&gt;&lt;/a&gt;singly linked list 구현&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="singly-linked-list-구현"><a href="#singly-linked-list-구현" class="headerlink" title="singly linked list 구현"></a>singly linked list 구현</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, value, <span class="built_in">next</span></span>):</span></span><br><span class="line">        self.value = value</span><br><span class="line">        self.<span class="built_in">next</span> = <span class="built_in">next</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SinglyLinkedList</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.head = <span class="literal">None</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_empty</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.head == <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prepend</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.head == <span class="literal">None</span>:</span><br><span class="line">            self.head = Node(value, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.head = Node(value, self.head)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.head == <span class="literal">None</span>:</span><br><span class="line">            self.head = Node(value, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            current_node = self.head</span><br><span class="line">            <span class="keyword">while</span> current_node.<span class="built_in">next</span> != <span class="literal">None</span>:</span><br><span class="line">                current_node = current_node.<span class="built_in">next</span></span><br><span class="line">            current_node.<span class="built_in">next</span> = Node(value, <span class="literal">None</span>);                                                                                                                                                                                                                                                                                  </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_head</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        current_node = self.head</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(index):</span><br><span class="line">            <span class="keyword">if</span> current_node == <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            current_node = current_node.<span class="built_in">next</span></span><br><span class="line">        self.head = current_node</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span> <span class="comment"># 왜 return True를 해줘야 할까?</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">access</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.head == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        current_node = self.head</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(index):</span><br><span class="line">            <span class="keyword">if</span> current_node == <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            current_node = current_node.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">return</span> current_node.value</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert</span>(<span class="params">self, index, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.head == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> index == <span class="number">0</span>:</span><br><span class="line">            self.prepend(value)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        current_node = self.head</span><br><span class="line">        previous_node = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(index):</span><br><span class="line">            <span class="keyword">if</span> current_node == <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            previous_node = current_node</span><br><span class="line">            current_node = current_node.<span class="built_in">next</span></span><br><span class="line">        previous_node.<span class="built_in">next</span> = Node(value, current_node)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.head == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> index == <span class="number">0</span>:</span><br><span class="line">            self.head = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            current_node = self.head</span><br><span class="line">            previous_node = <span class="literal">None</span></span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(index):</span><br><span class="line">                <span class="keyword">if</span> current_node == <span class="literal">None</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">                previous_node = current_node</span><br><span class="line">                current_node = current_node.<span class="built_in">next</span></span><br><span class="line">            <span class="keyword">if</span> current_node == <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            previous_node.<span class="built_in">next</span> = current_node.<span class="built_in">next</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.head == <span class="literal">None</span>:</span><br><span class="line">            print(<span class="string">&quot;[]&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;[&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">            current_node = self.head</span><br><span class="line">            <span class="keyword">while</span> current_node.<span class="built_in">next</span> != <span class="literal">None</span>:</span><br><span class="line">                print(current_node.value, end=<span class="string">&quot;, &quot;</span>)</span><br><span class="line">                current_node = current_node.<span class="built_in">next</span></span><br><span class="line">            print(current_node.value, <span class="string">&quot;]&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/13/20210413-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210412 TIL Array List 구현</title>
      <link>https://juhyeong-k.github.io/2021/04/12/20210412-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/12/20210412-TIL/</guid>
      <pubDate>Mon, 12 Apr 2021 09:30:04 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Array-List-구현&quot;&gt;&lt;a href=&quot;#Array-List-구현&quot; class=&quot;headerlink&quot; title=&quot;Array List 구현&quot;&gt;&lt;/a&gt;Array List 구현&lt;/h1&gt;&lt;figure class=&quot;highlight pyth</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Array-List-구현"><a href="#Array-List-구현" class="headerlink" title="Array List 구현"></a>Array List 구현</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> array</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArrayList</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, capacity</span>):</span></span><br><span class="line">        self.capacity = capacity</span><br><span class="line">        self.length = <span class="number">0</span></span><br><span class="line">        self.array = array.array(<span class="string">&#x27;l&#x27;</span>, [<span class="number">0</span>]*capacity)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_empty</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># True if self.length == 0 else False</span></span><br><span class="line">        <span class="keyword">return</span> self.capacity == <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prepend</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.length == self.capacity:</span><br><span class="line">            self.capacity *= <span class="number">2</span></span><br><span class="line">            new_array = array.array(<span class="string">&#x27;l&#x27;</span>, [<span class="number">0</span>]*self.capacity)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.length):</span><br><span class="line">                new_array[i+<span class="number">1</span>] = self.array[i]</span><br><span class="line">            self.array = new_array</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.length, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">                self.array[i] = self.array[i-<span class="number">1</span>]</span><br><span class="line">        self.array[<span class="number">0</span>] = value</span><br><span class="line">        self.length += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.length == self.capacity:</span><br><span class="line">            self.capacity *= <span class="number">2</span></span><br><span class="line">            new_array = array.array(<span class="string">&#x27;l&#x27;</span>, [<span class="number">0</span>]*self.capacity)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.length):</span><br><span class="line">                new_array[i] = self.array[i]</span><br><span class="line">            self.array = new_array</span><br><span class="line">        self.array[self.length] = value</span><br><span class="line">        self.length += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_head</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        self.array = self.array[index:]</span><br><span class="line"></span><br><span class="line">        self.capacity -= index</span><br><span class="line">        self.length -= index</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">access</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.array[index]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert</span>(<span class="params">self, index, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.length == self.capacity:</span><br><span class="line">            self.capacity *= <span class="number">2</span></span><br><span class="line">            new_array = array.array(<span class="string">&#x27;l&#x27;</span>, [<span class="number">0</span>]*self.capacity)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.length):</span><br><span class="line">                new_array[i] = self.array[i]</span><br><span class="line">            self.array = new_array</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.length, index, -<span class="number">1</span>):</span><br><span class="line">            self.array[i] = self.array[i-<span class="number">1</span>]</span><br><span class="line">        self.array[index] = value</span><br><span class="line">        self.length += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        <span class="comment"># range 범위 유의해야 함</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(index, self.length - <span class="number">1</span>):</span><br><span class="line">            self.array[i] = self.array[i+<span class="number">1</span>]</span><br><span class="line">        self.length -= <span class="number">1</span></span><br><span class="line">        <span class="comment"># array의 마지막 값도 0으로 만들어줘야 할까? no / garbage value 처리</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(self.array.tolist()[:self.length])</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/algorithm/">algorithm</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/12/20210412-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210411 TIL</title>
      <link>https://juhyeong-k.github.io/2021/04/12/20210411-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/12/20210411-TIL/</guid>
      <pubDate>Mon, 12 Apr 2021 01:05:22 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;프로그래머스-문제-풀이&quot;&gt;&lt;a href=&quot;#프로그래머스-문제-풀이&quot; class=&quot;headerlink&quot; title=&quot;프로그래머스 문제 풀이&quot;&gt;&lt;/a&gt;프로그래머스 문제 풀이&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12981&quot;&gt;https://programmers.co.kr/learn/courses/30/lessons/12981&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;solution&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n, words&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    answer = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    word_chain = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; word &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; words:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        word_chain.append(word)                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; word &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; word_chain[:-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) % n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) // n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; answer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) // n + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) % n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; answer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; word_chain[-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] != word[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) % n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) // n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; answer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) % n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) // n + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; answer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(word_chain[-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], word[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12913&quot;&gt;https://programmers.co.kr/learn/courses/30/lessons/12913&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;solution&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;land&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    answer = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    before_index = &lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            before_index = land[i-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].index(&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(land[i-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; before_index != &lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; before_index == land[i].index(&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(land[i])):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            land[i].pop(before_index)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            answer += &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(land[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            answer += &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(land[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; answer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="프로그래머스-문제-풀이"><a href="#프로그래머스-문제-풀이" class="headerlink" title="프로그래머스 문제 풀이"></a>프로그래머스 문제 풀이</h1><p><a href="https://programmers.co.kr/learn/courses/30/lessons/12981">https://programmers.co.kr/learn/courses/30/lessons/12981</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n, words</span>):</span></span><br><span class="line">    answer = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.</span></span><br><span class="line">    word_chain = []</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">        word_chain.append(word)                 </span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(word_chain) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> word <span class="keyword">in</span> word_chain[:-<span class="number">1</span>]:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(word_chain) % n == <span class="number">0</span>:</span><br><span class="line">                answer.append(<span class="built_in">len</span>(word_chain) // n)</span><br><span class="line">                answer.append(n)</span><br><span class="line">                <span class="keyword">return</span> answer</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                answer.append(<span class="built_in">len</span>(word_chain) // n + <span class="number">1</span>)</span><br><span class="line">                answer.append(<span class="built_in">len</span>(word_chain) % n)</span><br><span class="line">                <span class="keyword">return</span> answer</span><br><span class="line">        <span class="keyword">elif</span> word_chain[-<span class="number">2</span>][-<span class="number">1</span>] != word[<span class="number">0</span>]:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(word_chain) % n == <span class="number">0</span>:</span><br><span class="line">                answer.append(<span class="built_in">len</span>(word_chain) // n)</span><br><span class="line">                answer.append(n)</span><br><span class="line">                <span class="keyword">return</span> answer</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                answer.append(<span class="built_in">len</span>(word_chain) % n)</span><br><span class="line">                answer.append(<span class="built_in">len</span>(word_chain) // n + <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> answer</span><br><span class="line">        print(word_chain[-<span class="number">2</span>][-<span class="number">1</span>], word[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [<span class="number">0</span>, <span class="number">0</span>]</span><br></pre></td></tr></table></figure><p><a href="https://programmers.co.kr/learn/courses/30/lessons/12913">https://programmers.co.kr/learn/courses/30/lessons/12913</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">land</span>):</span></span><br><span class="line">    answer = <span class="number">0</span></span><br><span class="line">    before_index = <span class="literal">None</span>;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">0</span>:</span><br><span class="line">            before_index = land[i-<span class="number">1</span>].index(<span class="built_in">max</span>(land[i-<span class="number">1</span>]))</span><br><span class="line">        <span class="keyword">if</span> before_index != <span class="literal">None</span> <span class="keyword">and</span> before_index == land[i].index(<span class="built_in">max</span>(land[i])):</span><br><span class="line">            land[i].pop(before_index)</span><br><span class="line">            answer += <span class="built_in">max</span>(land[i])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            answer += <span class="built_in">max</span>(land[i])</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/12/20210411-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210410 TIL</title>
      <link>https://juhyeong-k.github.io/2021/04/12/20210410-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/12/20210410-TIL/</guid>
      <pubDate>Mon, 12 Apr 2021 01:05:14 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;20210410-TIL-CSSOM&quot;&gt;&lt;a href=&quot;#20210410-TIL-CSSOM&quot; class=&quot;headerlink&quot; title=&quot;20210410 TIL CSSOM&quot;&gt;&lt;/a&gt;20210410 TIL CSSOM&lt;/h1&gt;&lt;p&gt;CSSOM은 JavaScript로 CSS를 제어할 수 있는 API 모음이다.&lt;/p&gt;
&lt;h2 id=&quot;element-style-과-window-getComputedStyle&quot;&gt;&lt;a href=&quot;#element-style-과-window-getComputedStyle&quot; class=&quot;headerlink&quot; title=&quot;element.style 과 window.getComputedStyle()&quot;&gt;&lt;/a&gt;element.style 과 window.getComputedStyle()&lt;/h2&gt;&lt;p&gt;토이 프로젝트 중 자바스크립트로 CSS 속성을 제어하려고 &lt;code&gt;element.style&lt;/code&gt;을 사용했고, &lt;code&gt;element.style&lt;/code&gt;로 CSS 속성을 읽으려고 했지만&lt;br&gt;적용된 속성을 반환하지 않는 문제가 있었다. 찾아보니, &lt;code&gt;element.stlye&lt;/code&gt;로는 &lt;strong&gt;인라인 CSS로 적용된 것만 읽을 수 있었다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;이 해결책으로 &lt;code&gt;getComputedStlye()&lt;/code&gt;을 이용하면 해당되는 태그에 적용된 CSS 속성을 모두 가져올 수 있다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="20210410-TIL-CSSOM"><a href="#20210410-TIL-CSSOM" class="headerlink" title="20210410 TIL CSSOM"></a>20210410 TIL CSSOM</h1><p>CSSOM은 JavaScript로 CSS를 제어할 수 있는 API 모음이다.</p><h2 id="element-style-과-window-getComputedStyle"><a href="#element-style-과-window-getComputedStyle" class="headerlink" title="element.style 과 window.getComputedStyle()"></a>element.style 과 window.getComputedStyle()</h2><p>토이 프로젝트 중 자바스크립트로 CSS 속성을 제어하려고 <code>element.style</code>을 사용했고, <code>element.style</code>로 CSS 속성을 읽으려고 했지만<br>적용된 속성을 반환하지 않는 문제가 있었다. 찾아보니, <code>element.stlye</code>로는 <strong>인라인 CSS로 적용된 것만 읽을 수 있었다.</strong></p><p>이 해결책으로 <code>getComputedStlye()</code>을 이용하면 해당되는 태그에 적용된 CSS 속성을 모두 가져올 수 있다.</p><p><code>getComputedStlye()</code>메소드에 두번 째 인자를 전달하면 가상 요소의 속성에 접근이 가능하다.</p><p><code>getComputedStlye()</code>메소드에 세번 째 인자로 <code>!important</code>를 전달 할 수도 있다.</p><p>setProperty(), getPropertyValue(), removeProperty()로도 CSS속성 읽고 쓰기 가능하다.</p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>(<a href="https://ibrahimovic.tistory.com/56">https://ibrahimovic.tistory.com/56</a>)<br>(<a href="https://ibrahimovic.tistory.com/57">https://ibrahimovic.tistory.com/57</a>)</p>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/12/20210410-TIL/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
