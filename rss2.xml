<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JH&#39;s dev blog</title>
    <link>https://juhyeong-k.github.io/</link>
    
    <atom:link href="https://juhyeong-k.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>All about dev</description>
    <pubDate>Mon, 12 Apr 2021 09:35:53 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>20210412 TIL Array List 구현</title>
      <link>https://juhyeong-k.github.io/2021/04/12/20210412-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/12/20210412-TIL/</guid>
      <pubDate>Mon, 12 Apr 2021 09:30:04 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;Array-List-구현&quot;&gt;&lt;a href=&quot;#Array-List-구현&quot; class=&quot;headerlink&quot; title=&quot;Array List 구현&quot;&gt;&lt;/a&gt;Array List 구현&lt;/h1&gt;&lt;figure class=&quot;highlight pyth</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="Array-List-구현"><a href="#Array-List-구현" class="headerlink" title="Array List 구현"></a>Array List 구현</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> array</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ArrayList</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, capacity</span>):</span></span><br><span class="line">        self.capacity = capacity</span><br><span class="line">        self.length = <span class="number">0</span></span><br><span class="line">        self.array = array.array(<span class="string">&#x27;l&#x27;</span>, [<span class="number">0</span>]*capacity)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_empty</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment"># True if self.length == 0 else False</span></span><br><span class="line">        <span class="keyword">return</span> self.capacity == <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prepend</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.length == self.capacity:</span><br><span class="line">            self.capacity *= <span class="number">2</span></span><br><span class="line">            new_array = array.array(<span class="string">&#x27;l&#x27;</span>, [<span class="number">0</span>]*self.capacity)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.length):</span><br><span class="line">                new_array[i+<span class="number">1</span>] = self.array[i]</span><br><span class="line">            self.array = new_array</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.length, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">                self.array[i] = self.array[i-<span class="number">1</span>]</span><br><span class="line">        self.array[<span class="number">0</span>] = value</span><br><span class="line">        self.length += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span>(<span class="params">self, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.length == self.capacity:</span><br><span class="line">            self.capacity *= <span class="number">2</span></span><br><span class="line">            new_array = array.array(<span class="string">&#x27;l&#x27;</span>, [<span class="number">0</span>]*self.capacity)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.length):</span><br><span class="line">                new_array[i] = self.array[i]</span><br><span class="line">            self.array = new_array</span><br><span class="line">        self.array[self.length] = value</span><br><span class="line">        self.length += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_head</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        self.array = self.array[index:]</span><br><span class="line"></span><br><span class="line">        self.capacity -= index</span><br><span class="line">        self.length -= index</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">access</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.array[index]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert</span>(<span class="params">self, index, value</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.length == self.capacity:</span><br><span class="line">            self.capacity *= <span class="number">2</span></span><br><span class="line">            new_array = array.array(<span class="string">&#x27;l&#x27;</span>, [<span class="number">0</span>]*self.capacity)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.length):</span><br><span class="line">                new_array[i] = self.array[i]</span><br><span class="line">            self.array = new_array</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.length, index, -<span class="number">1</span>):</span><br><span class="line">            self.array[i] = self.array[i-<span class="number">1</span>]</span><br><span class="line">        self.array[index] = value</span><br><span class="line">        self.length += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">remove</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        <span class="comment"># range 범위 유의해야 함</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(index, self.length - <span class="number">1</span>):</span><br><span class="line">            self.array[i] = self.array[i+<span class="number">1</span>]</span><br><span class="line">        self.length -= <span class="number">1</span></span><br><span class="line">        <span class="comment"># array의 마지막 값도 0으로 만들어줘야 할까? no / garbage value 처리</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(self.array.tolist()[:self.length])</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/algorithm/">algorithm</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/12/20210412-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210411 TIL</title>
      <link>https://juhyeong-k.github.io/2021/04/12/20210411-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/12/20210411-TIL/</guid>
      <pubDate>Mon, 12 Apr 2021 01:05:22 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;프로그래머스-문제-풀이&quot;&gt;&lt;a href=&quot;#프로그래머스-문제-풀이&quot; class=&quot;headerlink&quot; title=&quot;프로그래머스 문제 풀이&quot;&gt;&lt;/a&gt;프로그래머스 문제 풀이&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12981&quot;&gt;https://programmers.co.kr/learn/courses/30/lessons/12981&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;solution&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;n, words&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    answer = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    word_chain = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; word &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; words:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        word_chain.append(word)                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; word &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; word_chain[:-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) % n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) // n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; answer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) // n + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) % n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; answer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;elif&lt;/span&gt; word_chain[-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] != word[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) % n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) // n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; answer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) % n)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                answer.append(&lt;span class=&quot;built_in&quot;&gt;len&lt;/span&gt;(word_chain) // n + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; answer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(word_chain[-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;][-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;], word[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12913&quot;&gt;https://programmers.co.kr/learn/courses/30/lessons/12913&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;solution&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;land&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    answer = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    before_index = &lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;range&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            before_index = land[i-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].index(&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(land[i-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; before_index != &lt;span class=&quot;literal&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; before_index == land[i].index(&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(land[i])):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            land[i].pop(before_index)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            answer += &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(land[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            answer += &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(land[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; answer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="프로그래머스-문제-풀이"><a href="#프로그래머스-문제-풀이" class="headerlink" title="프로그래머스 문제 풀이"></a>프로그래머스 문제 풀이</h1><p><a href="https://programmers.co.kr/learn/courses/30/lessons/12981">https://programmers.co.kr/learn/courses/30/lessons/12981</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">n, words</span>):</span></span><br><span class="line">    answer = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># [실행] 버튼을 누르면 출력 값을 볼 수 있습니다.</span></span><br><span class="line">    word_chain = []</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">        word_chain.append(word)                 </span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(word_chain) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> word <span class="keyword">in</span> word_chain[:-<span class="number">1</span>]:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(word_chain) % n == <span class="number">0</span>:</span><br><span class="line">                answer.append(<span class="built_in">len</span>(word_chain) // n)</span><br><span class="line">                answer.append(n)</span><br><span class="line">                <span class="keyword">return</span> answer</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                answer.append(<span class="built_in">len</span>(word_chain) // n + <span class="number">1</span>)</span><br><span class="line">                answer.append(<span class="built_in">len</span>(word_chain) % n)</span><br><span class="line">                <span class="keyword">return</span> answer</span><br><span class="line">        <span class="keyword">elif</span> word_chain[-<span class="number">2</span>][-<span class="number">1</span>] != word[<span class="number">0</span>]:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(word_chain) % n == <span class="number">0</span>:</span><br><span class="line">                answer.append(<span class="built_in">len</span>(word_chain) // n)</span><br><span class="line">                answer.append(n)</span><br><span class="line">                <span class="keyword">return</span> answer</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                answer.append(<span class="built_in">len</span>(word_chain) % n)</span><br><span class="line">                answer.append(<span class="built_in">len</span>(word_chain) // n + <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> answer</span><br><span class="line">        print(word_chain[-<span class="number">2</span>][-<span class="number">1</span>], word[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> [<span class="number">0</span>, <span class="number">0</span>]</span><br></pre></td></tr></table></figure><p><a href="https://programmers.co.kr/learn/courses/30/lessons/12913">https://programmers.co.kr/learn/courses/30/lessons/12913</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solution</span>(<span class="params">land</span>):</span></span><br><span class="line">    answer = <span class="number">0</span></span><br><span class="line">    before_index = <span class="literal">None</span>;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">if</span> i &gt; <span class="number">0</span>:</span><br><span class="line">            before_index = land[i-<span class="number">1</span>].index(<span class="built_in">max</span>(land[i-<span class="number">1</span>]))</span><br><span class="line">        <span class="keyword">if</span> before_index != <span class="literal">None</span> <span class="keyword">and</span> before_index == land[i].index(<span class="built_in">max</span>(land[i])):</span><br><span class="line">            land[i].pop(before_index)</span><br><span class="line">            answer += <span class="built_in">max</span>(land[i])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            answer += <span class="built_in">max</span>(land[i])</span><br><span class="line">    <span class="keyword">return</span> answer</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/12/20210411-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210410 TIL</title>
      <link>https://juhyeong-k.github.io/2021/04/12/20210410-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/12/20210410-TIL/</guid>
      <pubDate>Mon, 12 Apr 2021 01:05:14 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;20210410-TIL-CSSOM&quot;&gt;&lt;a href=&quot;#20210410-TIL-CSSOM&quot; class=&quot;headerlink&quot; title=&quot;20210410 TIL CSSOM&quot;&gt;&lt;/a&gt;20210410 TIL CSSOM&lt;/h1&gt;&lt;p&gt;CSSOM은 JavaScript로 CSS를 제어할 수 있는 API 모음이다.&lt;/p&gt;
&lt;h2 id=&quot;element-style-과-window-getComputedStyle&quot;&gt;&lt;a href=&quot;#element-style-과-window-getComputedStyle&quot; class=&quot;headerlink&quot; title=&quot;element.style 과 window.getComputedStyle()&quot;&gt;&lt;/a&gt;element.style 과 window.getComputedStyle()&lt;/h2&gt;&lt;p&gt;토이 프로젝트 중 자바스크립트로 CSS 속성을 제어하려고 &lt;code&gt;element.style&lt;/code&gt;을 사용했는데, &lt;code&gt;element.stlye1&lt;/code&gt;로 CSS 속성을 읽으려고 했지만&lt;br&gt;적용된 속성을 반환하지 않는 문제가 있었다. 찾아보니, &lt;code&gt;element.stlye&lt;/code&gt;로는 &lt;strong&gt;인라인 CSS로 적용된 것만 읽을 수 있었다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;이 해결책으로 &lt;code&gt;getComputedStlye()&lt;/code&gt;을 이용하면 해당되는 태그에 적용된 CSS 속성을 모두 가져올 수 있다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="20210410-TIL-CSSOM"><a href="#20210410-TIL-CSSOM" class="headerlink" title="20210410 TIL CSSOM"></a>20210410 TIL CSSOM</h1><p>CSSOM은 JavaScript로 CSS를 제어할 수 있는 API 모음이다.</p><h2 id="element-style-과-window-getComputedStyle"><a href="#element-style-과-window-getComputedStyle" class="headerlink" title="element.style 과 window.getComputedStyle()"></a>element.style 과 window.getComputedStyle()</h2><p>토이 프로젝트 중 자바스크립트로 CSS 속성을 제어하려고 <code>element.style</code>을 사용했는데, <code>element.stlye1</code>로 CSS 속성을 읽으려고 했지만<br>적용된 속성을 반환하지 않는 문제가 있었다. 찾아보니, <code>element.stlye</code>로는 <strong>인라인 CSS로 적용된 것만 읽을 수 있었다.</strong></p><p>이 해결책으로 <code>getComputedStlye()</code>을 이용하면 해당되는 태그에 적용된 CSS 속성을 모두 가져올 수 있다.</p><p><code>getComputedStlye()</code>메소드에 두번 째 인자를 전달하면 가상 요소의 속성에 접근이 가능하다.</p><p><code>getComputedStlye()</code>메소드에 세번 째 인자로 <code>!important</code>를 전달 할 수도 있다.</p><p>setProperty(), getPropertyValue(), removeProperty()로도 CSS속성 읽고 쓰기 가능하다.</p><p>#References<br>(<a href="https://ibrahimovic.tistory.com/56">https://ibrahimovic.tistory.com/56</a>)<br>(<a href="https://ibrahimovic.tistory.com/57">https://ibrahimovic.tistory.com/57</a>)</p>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/12/20210410-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210409 TIL</title>
      <link>https://juhyeong-k.github.io/2021/04/09/20210409-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/09/20210409-TIL/</guid>
      <pubDate>Fri, 09 Apr 2021 12:39:22 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;토이-프로젝트-수정-기능-코드-리팩토링&quot;&gt;&lt;a href=&quot;#토이-프로젝트-수정-기능-코드-리팩토링&quot; class=&quot;headerlink&quot; title=&quot;토이 프로젝트 수정 기능 코드 리팩토링&quot;&gt;&lt;/a&gt;토이 프로젝트 수정 기능 코드 리팩토링&lt;/</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="토이-프로젝트-수정-기능-코드-리팩토링"><a href="#토이-프로젝트-수정-기능-코드-리팩토링" class="headerlink" title="토이 프로젝트 수정 기능 코드 리팩토링"></a>토이 프로젝트 수정 기능 코드 리팩토링</h1><p>리팩토링 전</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 수정 기능 옛날 버전</span></span><br><span class="line"><span class="keyword">const</span> $detailChangeButton = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-change-button&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> $buttonsConfirmCancel = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.buttons-confirm-cancel&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> $detailConfirmButton = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-confirm-button&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> $detailSpanTitle = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> $detailSpandate = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> $detailSpanTextarea = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> $detailInputTitle = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">let</span> $detailTextarea = <span class="literal">null</span>;</span><br><span class="line">$detailChangeButton.onclick = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  $detailSpanTitle = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-span-title&#x27;</span>);</span><br><span class="line">  $detailSpanTitle.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">  $detailSpandate = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-span-date&#x27;</span>);</span><br><span class="line">  $detailSpandate.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">  $detailSpanTextarea = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-span-textarea&#x27;</span>);</span><br><span class="line">  $detailSpanTextarea.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">  $detailInputTitle = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-input-title&#x27;</span>);</span><br><span class="line">  $detailInputTitle.style.display = <span class="string">&#x27;inline-block&#x27;</span>;</span><br><span class="line">  $detailTextarea = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-textarea&#x27;</span>);</span><br><span class="line">  $detailTextarea.style.display = <span class="string">&#x27;inline-block&#x27;</span>;</span><br><span class="line">  $buttonsConfirmCancel.style.display = <span class="string">&#x27;inline-block&#x27;</span>;</span><br><span class="line">  $detailChangeButton.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-span-edited&#x27;</span>).style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line"><span class="comment">// 수정버튼 클릭시 기존의 내용 기본값으로 추가</span></span><br><span class="line">  $detailInputTitle.value = $detailSpanTitle.textContent;</span><br><span class="line">  $detailTextarea.value = $detailSpanTextarea.textContent;</span><br><span class="line"><span class="comment">// 수정버튼 클릭시 ^아이콘 삭제</span></span><br><span class="line">  <span class="comment">// $detailBtn.style.display=&#x27;none&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> modifyTodo = <span class="function">(<span class="params">title, content, edited</span>) =&gt;</span> &#123;</span><br><span class="line">  todos = todos.map(<span class="function"><span class="params">todo</span> =&gt;</span></span><br><span class="line">    todo.id === +todoDetail[<span class="number">0</span>].id ? &#123;...todo, title, content, edited&#125; : todo</span><br><span class="line">  );</span><br><span class="line">  todoDetail = todos.filter(<span class="function"><span class="params">todo</span> =&gt;</span> todo.id === +todoDetail[<span class="number">0</span>].id);</span><br><span class="line">  renderDetail(...todoDetail)</span><br><span class="line">  render()</span><br><span class="line">&#125;</span><br><span class="line">$buttonsConfirmCancel.onclick = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  $detailBtn.style.display=<span class="string">&#x27;inline-block&#x27;</span>;</span><br><span class="line">  $detailSpanTitle.style.display = <span class="string">&#x27;inline-block&#x27;</span>;</span><br><span class="line">  $detailSpandate.style.display = <span class="string">&#x27;inline-block&#x27;</span>;</span><br><span class="line">  $detailSpanTextarea.style.display = <span class="string">&#x27;inline-block&#x27;</span>;</span><br><span class="line">  $detailInputTitle.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">  $detailTextarea.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">  $detailChangeButton.style.display = <span class="string">&#x27;inline-block&#x27;</span>;</span><br><span class="line">  $buttonsConfirmCancel.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span> (e.target.textContent === <span class="string">&quot;확인&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!$detailInputTitle.value || !$detailTextarea.value)&#123;</span><br><span class="line">      $detailChangeButton.click();</span><br><span class="line">      $detailBtn.style.display=<span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">      alert(<span class="string">&#x27;제목과 내용을 작성해주세요&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> modifiedTitle = $detailInputTitle.value;</span><br><span class="line">    <span class="keyword">const</span> ModifiedContent = $detailTextarea.value;</span><br><span class="line">    <span class="keyword">let</span> editedDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    editedDate = editedDate.toISOString().slice(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">    modifyTodo(modifiedTitle, ModifiedContent, editedDate);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $detailInputTitle.value = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    $detailTextarea.value = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// detail button toggle</span></span><br><span class="line"><span class="keyword">const</span> toggleDetailClass = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  $toggleTags = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.toggle&#x27;</span>);</span><br><span class="line">  $toggleTags.forEach(<span class="function"><span class="params">tag</span> =&gt;</span> &#123;</span><br><span class="line">    tag.style.display = tag.style.display !== <span class="string">&quot;none&quot;</span> ? <span class="string">&quot;none&quot;</span> : <span class="string">&quot;inline-block&quot;</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 수정 버튼 클릭 시</span></span><br><span class="line"><span class="keyword">const</span> $detailChangeButton = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-change-button&#x27;</span>);</span><br><span class="line">$detailChangeButton.onclick = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  toggleDetailClass()</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-input-title&#x27;</span>).value = </span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-span-title&#x27;</span>).textContent;</span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-textarea&#x27;</span>).value = </span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-span-textarea&#x27;</span>).textContent;</span><br><span class="line">  $detailBtn.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// modify function</span></span><br><span class="line"><span class="keyword">const</span> modifyTodo = <span class="function">(<span class="params">title, content, edited</span>) =&gt;</span> &#123;</span><br><span class="line">  todos = <span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(<span class="string">&quot;key&quot;</span>)).map(<span class="function"><span class="params">todo</span> =&gt;</span> </span><br><span class="line">    todo.id === +item ? &#123;...todo, title, content, edited&#125; : todo);</span><br><span class="line">    renderDetail(item);</span><br><span class="line">    render()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 확인 버튼 클릭 시</span></span><br><span class="line"><span class="keyword">const</span> $detailConfirmButton = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-confirm-button&#x27;</span>);</span><br><span class="line">$detailConfirmButton.onclick = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> detailInputTitle = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-input-title&#x27;</span>);</span><br><span class="line">  <span class="keyword">const</span> detailTextarea = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-textarea&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (!detailInputTitle.value || !detailTextarea.value) &#123;</span><br><span class="line">    alert(<span class="string">&#x27;제목과 내용을 작성해주세요&#x27;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> modifiedTitle = detailInputTitle.value;</span><br><span class="line">    <span class="keyword">const</span> modifiedContent = detailTextarea.value;</span><br><span class="line">    <span class="keyword">let</span> editedDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    editedDate = editedDate.toISOString().slice(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">    toggleDetailClass();</span><br><span class="line">    modifyTodo(modifiedTitle, modifiedContent, editedDate);</span><br><span class="line">    detailInputTitle.value = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    detailTextarea.value = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    $detailBtn.style.display = <span class="string">&#x27;inline-block&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 취소 버튼 클릭 시</span></span><br><span class="line"><span class="keyword">const</span> $detailCancelButton = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.detail-cancel-button&#x27;</span>);</span><br><span class="line">$detailCancelButton.onclick = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  toggleDetailClass();</span><br><span class="line">  renderDetail(item);</span><br><span class="line">  $detailBtn.style.display = <span class="string">&#x27;inline-block&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/09/20210409-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210408 TIL JS 기능</title>
      <link>https://juhyeong-k.github.io/2021/04/08/20210408-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/08/20210408-TIL/</guid>
      <pubDate>Thu, 08 Apr 2021 12:09:44 GMT</pubDate>
      
        
        
      <description>&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</description>
        
      
      
      
      <content:encoded><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 이미지 업로드 기능</span></span><br><span class="line"><span class="keyword">const</span> $uploadImgInput = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.upload-img-input&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> $uploadPreviewImg = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.upload-preview-img&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> reader = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">$uploadImgInput.onchange = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> imgFile = e.target.files[<span class="number">0</span>];</span><br><span class="line">  reader = <span class="keyword">new</span> FileReader();</span><br><span class="line">  reader.onload = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    $uploadPreviewImg.setAttribute(<span class="string">&quot;src&quot;</span>, reader.result);</span><br><span class="line">  &#125;</span><br><span class="line">  reader.readAsDataURL(imgFile);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>FileReader</code>를 이용해서 이미지를 불러오고 <code>img</code>태그 안에 <code>src</code>어트리뷰트에 넣었다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 서치 동적 기능</span></span><br><span class="line"><span class="keyword">const</span> $mainInput = <span class="built_in">document</span>.querySelector(<span class="string">&#x27;.main-input&#x27;</span>);</span><br><span class="line">$mainInput.oninput = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> $liItems = <span class="built_in">document</span>.querySelectorAll(<span class="string">&#x27;.li-item&#x27;</span>);</span><br><span class="line">  $liItems.forEach(<span class="function"><span class="params">liItem</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> name = liItem.querySelector(<span class="string">&quot;.li-title&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> calender = liItem.querySelector(<span class="string">&quot;.li-date&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (name.innerHTML.indexOf($mainInput.value) &gt; -<span class="number">1</span> || calender.innerHTML.indexOf($mainInput.value) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">      liItem.style.display = <span class="string">&#x27;block&#x27;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">      liItem.style.display = <span class="string">&#x27;none&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>input</code>이벤트가 발생할 때마다 <code>input.value</code>와 데이터 안에 있는 <code>title</code> or <code>date</code>를 비교해서 일치하는 것만 표시한다.</p>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/JS/">JS</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/08/20210408-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210407 TIL</title>
      <link>https://juhyeong-k.github.io/2021/04/07/20210407-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/07/20210407-TIL/</guid>
      <pubDate>Wed, 07 Apr 2021 12:47:41 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;토이 프로젝트 기능 추가&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;리팩토링&lt;/p&gt;
&lt;/li&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li><p>토이 프로젝트 기능 추가</p></li><li><p>리팩토링</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/07/20210407-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210406 TIL</title>
      <link>https://juhyeong-k.github.io/2021/04/06/20210406-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/06/20210406-TIL/</guid>
      <pubDate>Tue, 06 Apr 2021 12:28:14 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;토이 프로젝트 기본 동작 페이지 완성&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;프로젝트 이슈</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li><p>토이 프로젝트 기본 동작 페이지 완성</p></li><li><p>프로젝트 이슈 정리해서 GitHub에 작성</p></li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/06/20210406-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210405 TIL 자료구조와 알고리즘 강의</title>
      <link>https://juhyeong-k.github.io/2021/04/05/20210405-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/05/20210405-TIL/</guid>
      <pubDate>Mon, 05 Apr 2021 12:33:09 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;Data-Structure-DS-자료구조&quot;&gt;&lt;a href=&quot;#Data-Structure-DS-자료구조&quot; class=&quot;headerlink&quot; title=&quot;Data Structure(DS, 자료구조)&quot;&gt;&lt;/a&gt;Data Structure(DS, 자료구조)&lt;/h1&gt;&lt;p&gt;자료(data) - 현실에서 수집한 사실이나 개념의 값 또는 이들의 집합이고, 특정 용도로 사용하기 위해 처리/가공한 정보를 자료라 한다.&lt;/p&gt;
&lt;p&gt;자료구조(DataStructure) - 자료값의 모임, 자료간의 관계, 자료에 적용할 수 있는 함수나 명령을 의미한다.&lt;/p&gt;
&lt;h3 id=&quot;자료구조의-필요성&quot;&gt;&lt;a href=&quot;#자료구조의-필요성&quot; class=&quot;headerlink&quot; title=&quot;자료구조의 필요성&quot;&gt;&lt;/a&gt;자료구조의 필요성&lt;/h3&gt;&lt;p&gt;만능인 자료구조는 없다. 상황에 따라 적절한 자료구조를 선택해서 사용해야 한다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="Data-Structure-DS-자료구조"><a href="#Data-Structure-DS-자료구조" class="headerlink" title="Data Structure(DS, 자료구조)"></a>Data Structure(DS, 자료구조)</h1><p>자료(data) - 현실에서 수집한 사실이나 개념의 값 또는 이들의 집합이고, 특정 용도로 사용하기 위해 처리/가공한 정보를 자료라 한다.</p><p>자료구조(DataStructure) - 자료값의 모임, 자료간의 관계, 자료에 적용할 수 있는 함수나 명령을 의미한다.</p><h3 id="자료구조의-필요성"><a href="#자료구조의-필요성" class="headerlink" title="자료구조의 필요성"></a>자료구조의 필요성</h3><p>만능인 자료구조는 없다. 상황에 따라 적절한 자료구조를 선택해서 사용해야 한다.</p><h3 id="자료구조의-선택으로-끼칠-영향"><a href="#자료구조의-선택으로-끼칠-영향" class="headerlink" title="자료구조의 선택으로 끼칠 영향"></a>자료구조의 선택으로 끼칠 영향</h3><ul><li>필요한 자료에 효율적으로 빠르게 접근 가능(메모리와 구동속도는 어느정도 비례 관계)</li><li>자료 중복을 최소화해서 저장장치를 효율적으로 사용 가능</li><li>자료구조별로 적절한 알고리즘을 기계적으로 적용 가능</li><li>제대로 된 자료구조를 선택함으로서 잘못된 창의성을 발휘하지 않게 도와주기 때문에 동료들과 협업하는데 큰 도움이 된다.</li></ul><h1 id="알고리즘"><a href="#알고리즘" class="headerlink" title="알고리즘"></a>알고리즘</h1><p>알고리즘은 문제를 해결하기 위한 여러 동작들의 모임이다.</p><h3 id="알고리즘-vs-메소드"><a href="#알고리즘-vs-메소드" class="headerlink" title="알고리즘 vs 메소드"></a>알고리즘 vs 메소드</h3><p>알고리즘은 항상 정답을 얻어내고 풀이한 게 정확히 채점될 수 있는 것을 말하느 반면에, 메소드는 정답을 도출하는데 도움을 주는 정도이다.</p><h3 id="알고리즘의-조건"><a href="#알고리즘의-조건" class="headerlink" title="알고리즘의 조건"></a>알고리즘의 조건</h3><p>입력(Input) - 외부에서 제공되는 자료가 존재<br>출력(Output) - 적어도 2가지 이상의 다른 결과를 출력해야 한다.</p><p>명확성(Definiteness) - 명확한 명령어로 구성<br>유한성(Finiteness) - 무한한 시간이 걸려서는 안된다.(그런 것들은 프로그램이라 함)<br>효과성(Effectiveness) - 사람이 종이와 연필로 유한한 시간안에 수행할 정도의 단순하고 명백해야 한다.</p><h3 id="알고리즘의-필요성"><a href="#알고리즘의-필요성" class="headerlink" title="알고리즘의 필요성"></a>알고리즘의 필요성</h3><p>컴퓨터의 연산 속도는 곧 비용이다. 최근에 많은 기업들이 클라우드 서비스를 제공하는데, 수 많은 서버를 물리적으로 구매/유지/관리하는 비용을 아낄 수 있고, 서버 엑세스의 급격한 증가에도 유연하게 대처할 수도 있으며 보안과 안전성 등 소규모 기업이 직접 해결하기 어려운 문제를 쉽게 해결할 수 있다.</p><ul><li>클라우드 서버의 비용은 실제로 임대한 서버의 Spec과 시간에 비례한다.</li><li>더 좋은 알고리즘으로 연산 속도를 개선할 경우, 더 낮은 서버 Spec으로 동일한 서비스를 제공할 수 있다.</li><li>동일한 Batch 작업에 더 좋은 알고리즘을 사용할 경우, 동일한 서버 Spec으로 더 짧은 시간 서버를 임대해도 동일한 결과를 가질 수 있다.</li></ul><h1 id="Coding-Test"><a href="#Coding-Test" class="headerlink" title="Coding Test"></a>Coding Test</h1><h3 id="Coding-Test의-목적"><a href="#Coding-Test의-목적" class="headerlink" title="Coding Test의 목적"></a>Coding Test의 목적</h3><ul><li>개발자의 실력을 빠르고 효율적으로 가늠하기 위해서 사용</li><li>개발자의 코딩 습관을 간접적으로 확인 가능</li><li>기업에서 필요로 하는 개발자 역량을 미리 확인할 수 있는 기회</li></ul><h3 id="문제-유형"><a href="#문제-유형" class="headerlink" title="문제 유형"></a>문제 유형</h3><ul><li>프로그래밍 언어의 기본 라이브러리를 이용한 효율적인 구현<br>반복문, 조건문, Array 검색, 정렬, 예외처리를 이용한 Test Case 해결</li><li>자료구조를 이용한 기본 구현<br>Map, Set, Heap 등 특수한 기능을 갖춘 자료구조 활용</li><li>잘 알려진 알고리즘 활용<br>자료구조와 더불어서 자료구조와 알고리즘을 모르면 절대 풀 수 없는 문제도 있다.</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/05/20210405-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210404 TIL WebStorage</title>
      <link>https://juhyeong-k.github.io/2021/04/04/20210404-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/04/20210404-TIL/</guid>
      <pubDate>Sun, 04 Apr 2021 11:31:48 GMT</pubDate>
      
      <description>&lt;p&gt;토이 프로젝트 기획 중 데이터를 어떻게 저장할지 고민이었다. Nodejs로 서버를 구현해서 데이터를 저장할 지, 아니면 브라우저의 Webstorage로 데이터를 저장할지 고민하면서 Webstorage방식은 어떻게 데이터를 저장할 수 있는지 알아봤다.&lt;/p&gt;
&lt;h1 id=&quot;Web-Storage&quot;&gt;&lt;a href=&quot;#Web-Storage&quot; class=&quot;headerlink&quot; title=&quot;Web Storage&quot;&gt;&lt;/a&gt;Web Storage&lt;/h1&gt;&lt;p&gt;HTML5부터 웹사이트의 데이터를 클라이언트에 저장할 수 있는 새로운 자료구조로 WebStorage 스펙이 추가되었다.&lt;br&gt;WebStorage는 key/value 로 데이터를 저장하고 key로 데이터를 찾는 패턴이다.&lt;br&gt;저장된 데이터가 클라이언트에만 존재할 뿐 서버로 전송이 이루어지지 않는다는 특징이 있다. 즉, 네트워크 트래픽 비용을 줄일 수 있다는 장점이 있다. 데이터의 지속성과 관련해서 LocalStorage와 SessionStorage 두 가지 저장소를 제공한다.&lt;/p&gt;
&lt;h3 id=&quot;LocalStorage&quot;&gt;&lt;a href=&quot;#LocalStorage&quot; class=&quot;headerlink&quot; title=&quot;LocalStorage&quot;&gt;&lt;/a&gt;LocalStorage&lt;/h3&gt;&lt;p&gt;LocalStorage는 도메인 별로 각각의 LocalStorage가 생성이 되고, 저장한 데이터를 지우지 않는 이상 영구적으로 보관이 가능한 특징을 가지고 있다.&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>토이 프로젝트 기획 중 데이터를 어떻게 저장할지 고민이었다. Nodejs로 서버를 구현해서 데이터를 저장할 지, 아니면 브라우저의 Webstorage로 데이터를 저장할지 고민하면서 Webstorage방식은 어떻게 데이터를 저장할 수 있는지 알아봤다.</p><h1 id="Web-Storage"><a href="#Web-Storage" class="headerlink" title="Web Storage"></a>Web Storage</h1><p>HTML5부터 웹사이트의 데이터를 클라이언트에 저장할 수 있는 새로운 자료구조로 WebStorage 스펙이 추가되었다.<br>WebStorage는 key/value 로 데이터를 저장하고 key로 데이터를 찾는 패턴이다.<br>저장된 데이터가 클라이언트에만 존재할 뿐 서버로 전송이 이루어지지 않는다는 특징이 있다. 즉, 네트워크 트래픽 비용을 줄일 수 있다는 장점이 있다. 데이터의 지속성과 관련해서 LocalStorage와 SessionStorage 두 가지 저장소를 제공한다.</p><h3 id="LocalStorage"><a href="#LocalStorage" class="headerlink" title="LocalStorage"></a>LocalStorage</h3><p>LocalStorage는 도메인 별로 각각의 LocalStorage가 생성이 되고, 저장한 데이터를 지우지 않는 이상 영구적으로 보관이 가능한 특징을 가지고 있다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 데이터에 저장</span></span><br><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;JH&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 데이터 조회</span></span><br><span class="line"><span class="built_in">localStorage</span>.getItem(<span class="string">&quot;name&quot;</span>); <span class="comment">// JH</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 데이터 삭제</span></span><br><span class="line"><span class="built_in">localStorage</span>.removeItem(<span class="string">&quot;name&quot;</span>); </span><br><span class="line"><span class="built_in">localStorage</span>.clear(); <span class="comment">// localStorage에 있는 데이터 전체 삭제</span></span><br></pre></td></tr></table></figure><p>LocalStorage의 키와 값은 문자열로 이루어져 있다. 만약 숫자나 객체 등 다른 자료형을 사용하게 된다면 문자열로 자동으로 변환된다.<br><code>JSON</code>을 사용한다면 객체를 쓸 수 있다.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&quot;json&quot;</span>, <span class="built_in">JSON</span>.stringify(&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;JS&quot;</span>, <span class="string">&quot;count&quot;</span>: <span class="number">99</span>&#125;)); <span class="comment">// json 포맷의 문자열로 변환 후 저장</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">JSON</span>.parse(<span class="built_in">localStorage</span>.getItem(<span class="string">&quot;json&quot;</span>)); <span class="comment">// &#123;name: &quot;JS&quot;, count: 99&#125;</span></span><br></pre></td></tr></table></figure><h3 id="SessionStorage"><a href="#SessionStorage" class="headerlink" title="SessionStorage"></a>SessionStorage</h3><p>sessionStorage 객체는 LocalStorage와 같이 제공되는 프로퍼티와 메소드는 같지만, 세션 종료 시(브라우저를 닫을 때) SessionStorage에 있는 데이터가 삭제된다. </p>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/04/20210404-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210403 TIL</title>
      <link>https://juhyeong-k.github.io/2021/04/03/20210403-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/04/03/20210403-TIL/</guid>
      <pubDate>Sat, 03 Apr 2021 13:41:33 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;43-Ajax&quot;&gt;&lt;a href=&quot;#43-Ajax&quot; class=&quot;headerlink&quot; title=&quot;43. Ajax&quot;&gt;&lt;/a&gt;43. Ajax&lt;/h1&gt;&lt;p&gt;Ajax(Asynchronous Javascript And XML)란 자바스크립트를 사용하여 브라우저가 서버에게 비동기 방식으로 데이터를 요청하고, 서버가 응답한 데이터를 수신하여 웹페이지를 동적으로 갱신하는 프로그래밍 방식을 말한다. Ajax는 브라우저에서 제공하는 Web API인 XMLHttpRequest 객체를 기반으로 동작하고, XMLHttpRequest는 HTTP 비동기 통신을 위한 메소드와 프로퍼티를 제공한다.&lt;/p&gt;
&lt;p&gt;Ajax의 장점&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;중복되는 데이터가 아닌 변경할 부분을 갱신하는 데 필요한 데이터만 서버로부터 전송 받기 때문에 불필요한 데이터 통신을 발생시키지 않을 수 있다.&lt;/li&gt;
&lt;li&gt;변경할 필요가 없는 부분은 다시 렌더링하지 않기 때문에 화면이 순간적으로 깜빡이는 현상이 발생하지 않는다.&lt;/li&gt;
&lt;li&gt;클라이언트와 서버의 통신이 비동기 방식으로 동작하기 때문에 서버에게 요청을 보낸 이후에 블로킹(Blocking)이 발생하지 않는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;JSON&quot;&gt;&lt;a href=&quot;#JSON&quot; class=&quot;headerlink&quot; title=&quot;JSON&quot;&gt;&lt;/a&gt;JSON&lt;/h3&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="43-Ajax"><a href="#43-Ajax" class="headerlink" title="43. Ajax"></a>43. Ajax</h1><p>Ajax(Asynchronous Javascript And XML)란 자바스크립트를 사용하여 브라우저가 서버에게 비동기 방식으로 데이터를 요청하고, 서버가 응답한 데이터를 수신하여 웹페이지를 동적으로 갱신하는 프로그래밍 방식을 말한다. Ajax는 브라우저에서 제공하는 Web API인 XMLHttpRequest 객체를 기반으로 동작하고, XMLHttpRequest는 HTTP 비동기 통신을 위한 메소드와 프로퍼티를 제공한다.</p><p>Ajax의 장점</p><ul><li>중복되는 데이터가 아닌 변경할 부분을 갱신하는 데 필요한 데이터만 서버로부터 전송 받기 때문에 불필요한 데이터 통신을 발생시키지 않을 수 있다.</li><li>변경할 필요가 없는 부분은 다시 렌더링하지 않기 때문에 화면이 순간적으로 깜빡이는 현상이 발생하지 않는다.</li><li>클라이언트와 서버의 통신이 비동기 방식으로 동작하기 때문에 서버에게 요청을 보낸 이후에 블로킹(Blocking)이 발생하지 않는다.</li></ul><h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><p>JSON(JavaScript Object Notation)은 클라이언트와 서버의 HTTP통신을 위한 텍스트 데이터 포맷이다. JSON의 키는 반드시 큰따옴표로만 묶어야 한다. 값은 객체 리터럴과 같은 표기법을 그대로 사용할 수 있지만 문자열은 반드시 큰따옴표로만 묶어야 한다.</p><p><code>JSON.stringify</code> 메소드는 객체를 JSON 포맷의 문자열로 변환한다. 클라이언트가 서버로 객체를 전송하려면 객체를 문자열화 해야하는데 이를 직렬화(serializing)라 한다.<br><code>JSON.parse</code> 메소드는 JSON 포맷의 문자열을 객체로 변환한다. 서버로부터 클라이언트에게 전송된 JSON 데이터는 문자열이기 때문에 <code>JSON.parse</code> 메소드로 객체화한다. 이를 역직렬화(deserializing)라 한다.</p>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/JS/">JS</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/04/03/20210403-TIL/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
