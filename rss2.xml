<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JH&#39;s dev blog</title>
    <link>https://juhyeong-k.github.io/</link>
    
    <atom:link href="https://juhyeong-k.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>All about dev</description>
    <pubDate>Thu, 04 Mar 2021 12:55:57 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>20210304 TIL</title>
      <link>https://juhyeong-k.github.io/2021/03/04/20210304-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/04/20210304-TIL/</guid>
      <pubDate>Thu, 04 Mar 2021 11:43:04 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;HTML-CSS-강의-내용-정리&quot;&gt;&lt;a href=&quot;#HTML-CSS-강의-내용-정리&quot; class=&quot;headerlink&quot; title=&quot;HTML, CSS 강의 내용 정리&quot;&gt;&lt;/a&gt;HTML, CSS 강의 내용 정리&lt;/h1&gt;&lt;h2 id=&quot;적응형</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="HTML-CSS-강의-내용-정리"><a href="#HTML-CSS-강의-내용-정리" class="headerlink" title="HTML, CSS 강의 내용 정리"></a>HTML, CSS 강의 내용 정리</h1><h2 id="적응형-웹-V-S-반응형-웹"><a href="#적응형-웹-V-S-반응형-웹" class="headerlink" title="적응형 웹 V.S 반응형 웹"></a>적응형 웹 V.S 반응형 웹</h2><ul><li><p>적응형(AWD)<br>적응형 웹은 각 기기에 적합한 UI 템플릿을 각각 제공<br>각 기기에 필요한 리소스만 다운로드 받아서 사용하기 때문에 로드 속도가 빠른 편</p></li><li><p>반응형(RWD)<br>미디어쿼리를 사용해서 하나의 UI 템플릿을 기기의 화면 크기에 맞게 변형<br>기기에 상관없이 모든 리소스를 다운로드 받아서 사용하기 때문에 로드 속도가 느린 편</p></li></ul><p>웹 제작 시 <code>mobile first</code> 방식으로 하는걸 추천</p><p><code>desktop first</code>로 설계된 페이지의 콘텐츠를 모바일에 넣으려고 하면 어떤걸 비워야 할 지 결정하기 힘들다.<br><code>mobile first</code>로 설계를 하게 되면 데스크탑에 어떤 컨텐츠를 채울지만 생각하면 된다.</p><blockquote><p><code>desktop first</code>는 코끼리를 냉장고에 넣어야 하는 것과 같다.</p></blockquote><p>모바일에서 구조 설계할 때 <code>off canvas</code>방식을 많이 사용한다.<br><code>off canvas</code> - 화면에서 안보이는 상태였다가 메뉴가 열릴 때 화면 밖에서 안으로 들어오는 방식</p><p>반응형 이미지를 만들 때 CSS 속성으로</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: auto;</span><br></pre></td></tr></table></figure><p>다른 브라우저에서 지원하지 않는 속성이 있을 때,<br><code>polyfill + 속성</code>을 구글링 하면 대응할 수 있는 방법이 나올 수도 있다.</p><p><code>&lt;picture&gt;</code>태그는 하나의 이미지를 확대 축소하는 대신에, 여러 이미지를 뷰포트에 맞게 대응할 수 있게 해주는 태그다. fallback으로 <code>&lt;img&gt;</code>를 줘야 하고 반응형 웹에서 자주 사용된다.</p><p><code>&lt;body&gt;</code>안에 <code>&lt;div class=&quot;containor&quot;&gt;</code> 같이 묶어주면 컴포넌트 나누기 편하다.</p><blockquote><p><code>&lt;body&gt;</code>에 배경을 줬을 때 <code>margin</code>을 준 부분까지 적용이 되는데 이유가 뭘까?</p></blockquote><p>시멘틱 태그를 주지 않아도 비슷한 역할을 <code>WAI-ARIA roles</code>를 이용하면 만들어 줄 수 있다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span> / <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">&quot;banner&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">main</span>&gt;</span> / <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span> / <span class="tag">&lt;<span class="name">div</span> <span class="attr">role</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>position: fixed</code>는 뷰포트 기준으로 위치를 조절할 수 있다.<br><code>position: sticky</code> = relative + fixed</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">position</span>: <span class="selector-tag">fixed</span>;</span><br><span class="line"><span class="selector-tag">left</span>: 0;</span><br><span class="line"><span class="selector-tag">right</span>: 0;</span><br><span class="line"><span class="selector-tag">width</span>: 100<span class="selector-tag">wh</span>;</span><br></pre></td></tr></table></figure><p><code>fixed</code>된 상태에서 왼쪽과 오른쪽으로 맞추려고 하다보니 양쪽 끝으로 늘어나는 것 처럼 보인다.</p><p><code>position: absolute</code>상태에서 top,bottom,left,right에 0값을 주고 margin을 주면 가운데 정렬 느낌 낼 수 있다?</p><p>flex-item들은 형제 레벨에 맞춰서 높이가 자동으로 조절된다.<br>flex-item들 끼리 마진 병합이 일어나지 않는다.<br>CSS에서 <code>display: none</code>값을 HTML5에서 태그 안에 <code>hidden</code>을 주면 비슷한 역할을 할 수 있다.</p><p>aria-property, aria-status 검색</p><p>cal(50% - 10px)<br>multi column css MDN<br>애니메이션도 설계 먼저</p>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/HTML/">HTML</category>
      
      <category domain="https://juhyeong-k.github.io/tags/CSS/">CSS</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/04/20210304-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210303 TIL 작성중..</title>
      <link>https://juhyeong-k.github.io/2021/03/03/20210303-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/03/20210303-TIL/</guid>
      <pubDate>Wed, 03 Mar 2021 11:47:24 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;HTML-CSS-강의-내용-정리&quot;&gt;&lt;a href=&quot;#HTML-CSS-강의-내용-정리&quot; class=&quot;headerlink&quot; title=&quot;HTML, CSS 강의 내용 정리&quot;&gt;&lt;/a&gt;HTML, CSS 강의 내용 정리&lt;/h1&gt;&lt;h2 id=&quot;tra</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="HTML-CSS-강의-내용-정리"><a href="#HTML-CSS-강의-내용-정리" class="headerlink" title="HTML, CSS 강의 내용 정리"></a>HTML, CSS 강의 내용 정리</h1><h2 id="transition"><a href="#transition" class="headerlink" title="transition"></a>transition</h2><p><code>transition</code>은 어떤 속성이 어떤 상황(ex.<code>:hover</code>)으로 인해 <code>A-&gt;B</code>로 변경될 때 그 과정을 일정 기간에 걸쳐서 자연스럽게 변화하는 과정을 보여준다. 이와 비슷한 기능을 하는 <code>@keyframes</code>가 있는데, <code>transition</code>보다 더 디테일하고 다양하게 변화를 줄 수 있다.<br>‘transition-delay’속성을 줄 때, <code>s</code>, <code>ms</code>단위를 사용할 수 있는데, 0초를 주더라고 꼭 <code>0s</code>로 s를 붙여야 한다. 다른 속성들과 다르게 0초의 단위를 생략할 수 없다.</p><h2 id="대화형-콘텐츠"><a href="#대화형-콘텐츠" class="headerlink" title="대화형 콘텐츠"></a>대화형 콘텐츠</h2><p><code>:hover</code>는 모든 태그에 대해서 사용이 가능하지만, <code>:focus</code>는 <code>a</code>, <code>input</code>, <code>button</code> 태그와 같이 <a href="https://developer.mozilla.org/ko/docs/Web/Guide/HTML/Content_categories#%EB%8C%80%ED%99%94%ED%98%95_%EC%BD%98%ED%85%90%EC%B8%A0">대화형 콘텐츠</a>의 요소만 사용이 가능하다.</p><blockquote><p>태그에 <code>tabindex=&quot;0&quot;</code>을 준다면 <code>tab</code>키를 받을 수 있어서 <code>:focus</code>를 사용가능하게 만들 수는 있다.</p></blockquote><h2 id="순서-입력"><a href="#순서-입력" class="headerlink" title="순서 입력"></a>순서 입력</h2><p>CSS로 <code>&lt;li&gt;</code>안에 순서대로 숫자를 입력할 때 <code>li::before&#123;content: &quot;1&quot;&#125;</code>하나씩 입력해도 되지만 100개가 넘는다면? 너무 노가다.. 해결 방법이 있다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">::befor</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="built_in">counter</span>(number);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">counter-increment</span>: number;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>&lt;li&gt;</code>에 순서대로 숫자가 입력된다.</p><h2 id="문자-숨기는-방법"><a href="#문자-숨기는-방법" class="headerlink" title="문자 숨기는 방법"></a>문자 숨기는 방법</h2><p><code>padding</code> <code>overflow: hidden</code><br><code>text-indent</code> <code>overflow: hidden</code><br><code>::after&#123;background: url()&#125;</code></p><h2 id="px-차이점"><a href="#px-차이점" class="headerlink" title="px, % 차이점"></a><code>px</code>, <code>%</code> 차이점</h2><h2 id="인용구"><a href="#인용구" class="headerlink" title="인용구"></a>인용구</h2><p><code>&lt;blockquote&gt;</code><br><code>&lt;q cite=&quot; &quot;&gt;</code> <code>cite</code>는 인용한 정보의 저작권 표시를 위한 속성. 값으로 <code>isbn: ~</code>책에 대한 내용 <code>http:// ~</code> 웹에 대한 내용</p><h2 id="lt-footer-gt-는-제목을-가지지-않는게-좋다"><a href="#lt-footer-gt-는-제목을-가지지-않는게-좋다" class="headerlink" title="&lt;footer&gt;는 제목을 가지지 않는게 좋다."></a><code>&lt;footer&gt;</code>는 제목을 가지지 않는게 좋다.</h2><h2 id="a"><a href="#a" class="headerlink" title="a"></a>a</h2><p><code>&lt;a href=&quot;tel: 01012341234&quot;&gt;</code> 링크를 누르면 자동으로 전화로 연결해줄 수 있다.</p><h2 id="Grid"><a href="#Grid" class="headerlink" title="Grid"></a>Grid</h2><p>Grid를 사용하면 배치에 대한 큰 걱정없이 논리성을 줌심으로 마크업할 수 있다.<br>단, <code>Internet Explorer</code>를 지원하지 않는 단점이 있는데,<br>전세계에서 <code>Internet Explorer</code>의 점유율은 2%미만을 차지하는데 우리나라는 높은 비중을 차지하고 있어서 현업에서 <code>Grid</code>를 사용하기는 힘들다고 한다.<br><a href="https://presscat.co.kr/blog/browser-market-share-mar2020/">웹 브라우저 시장 점유율(2020)</a></p><p>클론 코딩은 완전히 똑같이 만드는게 아니라 그 페이지를 분석해보고, 장점은 가져오고 보완했으면 좋은 것들을 정리해서 만들어야 한다.</p>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      <category domain="https://juhyeong-k.github.io/tags/HTML/">HTML</category>
      
      <category domain="https://juhyeong-k.github.io/tags/CSS/">CSS</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/03/20210303-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210302 TIL</title>
      <link>https://juhyeong-k.github.io/2021/03/02/20210302-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/02/20210302-TIL/</guid>
      <pubDate>Tue, 02 Mar 2021 12:29:57 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;[BAEKJOON]회문 문제 풀이 정리&lt;/li&gt;
&lt;li&gt;HTML, CSS 강의 내용 복</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>[BAEKJOON]회문 문제 풀이 정리</li><li>HTML, CSS 강의 내용 복습</li></ul><h1 id="리스트"><a href="#리스트" class="headerlink" title="리스트"></a>리스트</h1><ul><li>Semantic 마크업 </li><li>웹 표준, 접근성</li><li>ARIA</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/02/20210302-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>[BAEKJOON] 회문 17609번</title>
      <link>https://juhyeong-k.github.io/2021/03/01/BAEKJOON-%ED%9A%8C%EB%AC%B8-17609/</link>
      <guid>https://juhyeong-k.github.io/2021/03/01/BAEKJOON-%ED%9A%8C%EB%AC%B8-17609/</guid>
      <pubDate>Mon, 01 Mar 2021 13:37:52 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;회문-팰린드롬-palindrome&quot;&gt;&lt;a href=&quot;#회문-팰린드롬-palindrome&quot; class=&quot;headerlink&quot; title=&quot;회문/팰린드롬(palindrome)&quot;&gt;&lt;/a&gt;회문/팰린드롬(palindrome)&lt;/h1&gt;&lt;h2 id=</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="회문-팰린드롬-palindrome"><a href="#회문-팰린드롬-palindrome" class="headerlink" title="회문/팰린드롬(palindrome)"></a>회문/팰린드롬(palindrome)</h1><h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p>회문(回文) 또는 팰린드롬(palindrome)은 앞 뒤 방향으로 볼 때 같은 순서의 문자로 구성된 문자열을 말한다. 예를 들어 ‘abba’ ‘kayak’, ‘reviver’, ‘madam’은 모두 회문이다. 만일 그 자체는 회문이 아니지만 한 문자를 삭제하여 회문으로 만들 수 있는 문자열이라면 우리는 이런 문자열을 “유사회문”(pseudo palindrome)이라고 부른다. 예를 들어 ‘summuus’는 5번째나 혹은 6번째 문자 ‘u’를 제거하여 ‘summus’인 회문이 되므로 유사회문이다.</p><p>여러분은 제시된 문자열을 분석하여 그것이 그 자체로 회문인지, 또는 한 문자를 삭제하면 회문이 되는 “유사회문”인지, 아니면 회문이나 유사회문도 아닌 일반 문자열인지를 판단해야 한다. 만일 문자열 그 자체로 회문이면 0, 유사회문이면 1, 그 외는 2를 출력해야 한다.</p><h2 id="풀이"><a href="#풀이" class="headerlink" title="풀이"></a>풀이</h2><p>처음에 생각한 건 입력받은 문자열과 거꾸로 뒤집은 문자열을 비교하고, 같으면 0출력 다르면 문자열에서 문자 한 개를 빼고 다시 뒤집은 다음에 비교하는 반복문을 넣어서 만들어봤다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    words = <span class="built_in">list</span>(<span class="built_in">input</span>())</span><br><span class="line">    reverse_words = words[::-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> words == reverse_words:</span><br><span class="line">        print(<span class="number">0</span>) <span class="comment"># palindrome</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(words)):</span><br><span class="line">            new_words = <span class="built_in">list</span>(words) <span class="comment"># 연결 끊어내기 위해 list선언</span></span><br><span class="line">            new_words.pop(i)</span><br><span class="line">            reverse_new_words = new_words[::-<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> new_words == reverse_new_words:</span><br><span class="line">                print(<span class="number">1</span>) <span class="comment"># pseudo palindrome</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> new_words != reverse_new_words:</span><br><span class="line">            print(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>정답을 제출했는데, 시간초과가 나왔다. 맞거나 틀리거나 둘 중 하나라고 생각했는데 시간초과라고 해서 당황했다. 시간복잡도에 대해서 제대로 생각해본 적이 없었던 것 같다.</p><p>이번엔 다른 방식으로 코드를 짜봤다.<br>왼쪽과 오른쪽 문자를 가운데에 수렴할 때까지 비교해서 계속 같으면 0출력, 다르면 왼쪽 혹은 오른쪽 문자 한 개를 제외하고 다시 비교해서 계속 같으면 1출력, 다르면 0출력</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">palindrom</span>(<span class="params">words</span>):</span></span><br><span class="line">    left = <span class="number">0</span></span><br><span class="line">    right = <span class="built_in">len</span>(words) - <span class="number">1</span></span><br><span class="line">    result = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        <span class="keyword">if</span> words[left] == words[right]:</span><br><span class="line">            left += <span class="number">1</span></span><br><span class="line">            right -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> words[left+<span class="number">1</span>] == words[right]:</span><br><span class="line">            left += <span class="number">2</span></span><br><span class="line">            right -= <span class="number">1</span></span><br><span class="line">            result = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> words[left] == words[right-<span class="number">1</span>]:</span><br><span class="line">            left += <span class="number">1</span></span><br><span class="line">            right -= <span class="number">2</span></span><br><span class="line">            result = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> result:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>: </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(palindrom(<span class="string">&#x27;comwwtmoc&#x27;</span>))</span><br></pre></td></tr></table></figure><p>이번엔 결과가 틀렸다고 나왔다. 코드를 다시 살펴보니, 문자를 한 개만 제거하고 비교해야 하는데, 문자열이 맞지 않을 때마다 계속 제거하면서 비교하고 있었다. 그리고 유사 회문(pseudo palindrome)처리가 너무 애매해서 여기저기 찾아보면서 힌트를 얻었다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pseudo_palindrom</span>(<span class="params">left, right, words</span>):</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        <span class="keyword">if</span> words[left] == words[right]:</span><br><span class="line">            left += <span class="number">1</span></span><br><span class="line">            right -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">palindrom</span>(<span class="params">words</span>):</span></span><br><span class="line">    left = <span class="number">0</span></span><br><span class="line">    right = <span class="built_in">len</span>(words) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right:</span><br><span class="line">        <span class="keyword">if</span> words[left] == words[right]:</span><br><span class="line">            left += <span class="number">1</span></span><br><span class="line">            right -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            func_1 = pseudo_palindrom(left+<span class="number">1</span>, right, words)</span><br><span class="line">            func_2 = pseudo_palindrom(left, right-<span class="number">1</span>, words)</span><br><span class="line">            <span class="keyword">if</span> func_1 <span class="keyword">or</span> func_2:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(<span class="built_in">input</span>())):</span><br><span class="line">    print(palindrome(<span class="built_in">input</span>()))</span><br></pre></td></tr></table></figure><p>유사회문(pseudo palindrom)처리하는 함수를 따로 만들어서 왼쪽을 제거할 때, 오른쪽을 제거할 때의 경우를 모두 구해서 둘 중에 하나라도 True값이면 1이 출력되게 했다.</p>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/BAEKJOON/">BAEKJOON</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/BAEKJOON/">BAEKJOON</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/01/BAEKJOON-%ED%9A%8C%EB%AC%B8-17609/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210301 TIL</title>
      <link>https://juhyeong-k.github.io/2021/03/01/20210301-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/03/01/20210301-TIL/</guid>
      <pubDate>Mon, 01 Mar 2021 12:53:30 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;sigma 과제 풀이&lt;/li&gt;
&lt;li&gt;알고리즘 문제 풀이&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 i</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>sigma 과제 풀이</li><li>알고리즘 문제 풀이</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>HTML, CSS 강의 복습</li><li>알고리즘 문제 정리</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/03/01/20210301-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210227 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/27/20210227-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/27/20210227-TIL/</guid>
      <pubDate>Sat, 27 Feb 2021 10:50:45 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;이번 주 HTML, CSS 강의 내용 정리&lt;/li&gt;
&lt;li&gt;Clean Code 43p </description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>이번 주 HTML, CSS 강의 내용 정리</li><li>Clean Code 43p ~ 52p 독서</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>sigma 과제 풀이</li><li>알고리즘 문제 풀이</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/27/20210227-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210226 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/26/20210226-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/26/20210226-TIL/</guid>
      <pubDate>Fri, 26 Feb 2021 11:55:33 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;HTML, CSS 강의 내용 복습&lt;/li&gt;
&lt;li&gt;“Clean Code” 37p ~ 4</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>HTML, CSS 강의 내용 복습</li><li>“Clean Code” 37p ~ 42p 독서</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>알고리즘 문제 풀이</li><li>HTML, CSS 예제 연습</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/26/20210226-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210225 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/25/20210225-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/25/20210225-TIL/</guid>
      <pubDate>Thu, 25 Feb 2021 12:38:49 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;CSS 강의 복습&lt;/li&gt;
&lt;li&gt;“Clean Code” 28p ~ 36p 독서&lt;/li</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>CSS 강의 복습</li><li>“Clean Code” 28p ~ 36p 독서</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>CSS 강의 복습</li><li>“Clean Code” 독서</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/25/20210225-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210224 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/24/20210224-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/24/20210224-TIL/</guid>
      <pubDate>Wed, 24 Feb 2021 12:28:21 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;파이썬 과제 수정 제출&lt;/li&gt;
&lt;li&gt;html, css 강의 복습&lt;/li&gt;
&lt;li&gt;“</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>파이썬 과제 수정 제출</li><li>html, css 강의 복습</li><li>“Clean Code” 18p ~ 27p 독서</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>css 강의 복습</li><li>“Clean Code” 독서</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/24/20210224-TIL/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>20210223 TIL</title>
      <link>https://juhyeong-k.github.io/2021/02/23/20210223-TIL/</link>
      <guid>https://juhyeong-k.github.io/2021/02/23/20210223-TIL/</guid>
      <pubDate>Tue, 23 Feb 2021 12:48:33 GMT</pubDate>
      
        
        
      <description>&lt;h1 id=&quot;오늘-한-일&quot;&gt;&lt;a href=&quot;#오늘-한-일&quot; class=&quot;headerlink&quot; title=&quot;오늘 한 일&quot;&gt;&lt;/a&gt;오늘 한 일&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;엘리베이터 시스템, 하노이 타워 알고리즘 과제 제출&lt;/li&gt;
&lt;li&gt;“Clean Cod</description>
        
      
      
      
      <content:encoded><![CDATA[<h1 id="오늘-한-일"><a href="#오늘-한-일" class="headerlink" title="오늘 한 일"></a>오늘 한 일</h1><ul><li>엘리베이터 시스템, 하노이 타워 알고리즘 과제 제출</li><li>“Clean Code” 11p ~ 17p 독서</li></ul><h1 id="내일-할-일"><a href="#내일-할-일" class="headerlink" title="내일 할 일"></a>내일 할 일</h1><ul><li>CSS 강의 복습</li><li>“Clean Code” 독서</li></ul>]]></content:encoded>
      
      
      <category domain="https://juhyeong-k.github.io/categories/TIL/">TIL</category>
      
      
      <category domain="https://juhyeong-k.github.io/tags/TIL/">TIL</category>
      
      
      <comments>https://juhyeong-k.github.io/2021/02/23/20210223-TIL/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
